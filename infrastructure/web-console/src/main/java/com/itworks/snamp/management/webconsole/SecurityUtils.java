package com.itworks.snamp.management.webconsole;

import com.itworks.snamp.ExceptionPlaceholder;
import com.itworks.snamp.ExceptionalCallable;
import com.itworks.snamp.internal.Utils;
import org.eclipse.jetty.jaas.JAASLoginService;
import org.eclipse.jetty.jaas.spi.LdapLoginModule;
import org.eclipse.jetty.server.UserIdentity;

import javax.ws.rs.WebApplicationException;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.SecurityContext;
import java.lang.ref.WeakReference;
import java.util.Arrays;

/**
 * @author Roman Sakno
 * @version 1.0
 * @since 1.0
 */
public final class SecurityUtils {
    private SecurityUtils(){

    }

    static final String ADMIN_ROLE = "admin";
    static final String USER_ROLE = "user";

    private static final class OsgiCompliantJAASLoginService extends JAASLoginService {
        private final WeakReference<ClassLoader> osgiClassLoader;

        private OsgiCompliantJAASLoginService(
                final String realmName,
                final ClassLoader osgiClassLoader) {
            super(realmName);
            this.osgiClassLoader = new WeakReference<>(osgiClassLoader);
        }

        @Override
        public UserIdentity login(final String username, final Object credentials) {
            final ClassLoader osgiClassLoader = this.osgiClassLoader.get();
            return osgiClassLoader != null ?
                    Utils.withContextClassLoader(osgiClassLoader, new ExceptionalCallable<UserIdentity, ExceptionPlaceholder>() {
                        @Override
                        public UserIdentity call() {
                            return OsgiCompliantJAASLoginService.super.login(username, credentials);
                        }
                    }) : super.login(username, credentials);
        }
    }

    static JAASLoginService createJaasLoginServiceForOsgi(final String realmName,
                                                          final ClassLoader osgiClassLoader){
        return new OsgiCompliantJAASLoginService(realmName, osgiClassLoader);
    }

    //this method is not used by this bundle but required for correct Import-Package
    //header generated by maven-bundle-plugin. This plugin adds org.eclipse.jetty.jaas.spi.*
    //package that is required by LoginContext factory.
    @SuppressWarnings("UnusedDeclaration")
    static String convertCredentialJettyToLdap(final String encryptedPassword){
        return LdapLoginModule.convertCredentialLdapToJetty(encryptedPassword);
    }

    static void checkRoles(final SecurityContext context, final String... roles) throws WebApplicationException{
        if(context == null) return;
        for(final String r: roles)
            if(context.isUserInRole(r)) return;
        throw new WebApplicationException(new SecurityException(String.format("User %s is not in %s roles", context.getUserPrincipal().getName(), Arrays.toString(roles))), Response.Status.FORBIDDEN);
    }

    static void adminRequired(final SecurityContext context) throws WebApplicationException{
        checkRoles(context, ADMIN_ROLE);
    }

    static void wellKnownRoleRequired(final SecurityContext context) throws WebApplicationException{
        checkRoles(context, ADMIN_ROLE, USER_ROLE);
    }
}
