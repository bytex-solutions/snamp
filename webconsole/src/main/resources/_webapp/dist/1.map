{"version":3,"file":"1.chunk.js","sources":["webpack:///./src/app/watchers/templates/css/main.css","webpack:///./src/app/watchers/components/checkers.component.ts","webpack:///./src/app/watchers/components/templates/checkers.html","webpack:///./src/app/watchers/components/templates/trigger.html","webpack:///./src/app/watchers/components/trigger.component.ts","webpack:///./src/app/watchers/model/colored.checker.ts","webpack:///./src/app/watchers/model/colored.predicate.ts","webpack:///./src/app/watchers/model/constant.attribute.predicate.ts","webpack:///./src/app/watchers/model/entity.ts","webpack:///./src/app/watchers/model/factory.ts","webpack:///./src/app/watchers/model/number.comparator.predicate.ts","webpack:///./src/app/watchers/model/range.comparator.ts","webpack:///./src/app/watchers/model/scriptlet.data.object.ts","webpack:///./src/app/watchers/model/watcher.ts","webpack:///./src/app/watchers/templates/css/main.css?2840","webpack:///./src/app/watchers/templates/main.html","webpack:///./src/app/watchers/templates/template.html","webpack:///./src/app/watchers/watchers.modules.ts","webpack:///./src/app/watchers/watchers.template.ts","webpack:///./src/app/watchers/watchers.view.ts"],"sourcesContent":["exports = module.exports = require(\"./../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/watchers/templates/css/main.css\n// module id = ./node_modules/css-loader/index.js!./src/app/watchers/templates/css/main.css\n// module chunks = 1","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ScriptletDataObject } from '../model/scriptlet.data.object';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'checkers',\r\n  template: require('./templates/checkers.html'),\r\n  styles: ['.flatbar { width: 100% !important; text-align: left !important; margin-left: -15px !important; }']\r\n})\r\nexport class CheckersComponent {\r\n    @Input() entity:{ [key:string]:ScriptletDataObject; } = {};\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/components/checkers.component.ts","module.exports = \"<div>\\r\\n    <dl class=\\\"row\\\">\\r\\n        <dt class=\\\"col-sm-3\\\">Description lists</dt>\\r\\n        <dd class=\\\"col-sm-9\\\">A description list is perfect for defining terms.</dd>\\r\\n\\r\\n        <dt class=\\\"col-sm-3\\\">Euismod</dt>\\r\\n        <dd class=\\\"col-sm-9\\\">Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.</dd>\\r\\n        <dd class=\\\"col-sm-9 offset-sm-3\\\">Donec id elit non mi porta gravida at eget metus.</dd>\\r\\n\\r\\n        <dt class=\\\"col-sm-3\\\">Malesuada porta</dt>\\r\\n        <dd class=\\\"col-sm-9\\\">Etiam porta sem malesuada magna mollis euismod.</dd>\\r\\n\\r\\n        <dt class=\\\"col-sm-3 text-truncate\\\">Truncated term is truncated</dt>\\r\\n        <dd class=\\\"col-sm-9\\\">Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.</dd>\\r\\n\\r\\n    </dl>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/watchers/components/templates/checkers.html\n// module id = ./src/app/watchers/components/templates/checkers.html\n// module chunks = 1","module.exports = \"<div class=\\\"modal fade\\\" [attr.id]=\\\"'details_' + entity.id\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addEntityLabel\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n                <h4 class=\\\"modal-title leftAlign\\\" id=\\\"addEntityLabel\\\">Entity {{entity.name}} details</h4>\\r\\n            </div>\\r\\n            <br/>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <pre>\\r\\n                    <code>\\r\\n                        {{entity.script}}\\r\\n                    </code>\\r\\n                </pre>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div>\\r\\n    <dl class=\\\"row\\\">\\r\\n        <dt class=\\\"col-sm-3\\\">Language:</dt>\\r\\n        <dd class=\\\"col-sm-9\\\">{{entity.language}}</dd>\\r\\n\\r\\n        <dt class=\\\"col-sm-3\\\">Is url:</dt>\\r\\n        <dd class=\\\"col-sm-9\\\">{{entity.isURL}}</dd>\\r\\n\\r\\n        <dt class=\\\"col-sm-3\\\">Script:</dt>\\r\\n        <dd class=\\\"col-sm-9\\\" [tooltip]=\\\"'Click for details'\\\">{{entity.shortScript()}}<br/>\\r\\n            <button\\r\\n                    class=\\\"center-block btn\\\"\\r\\n                    data-toggle=\\\"modal\\\"\\r\\n                    [attr.data-target]=\\\"'#details_' + entity.id\\\">\\r\\n                <i class=\\\"fa fa-search\\\"></i> Details\\r\\n            </button>\\r\\n        </dd>\\r\\n    </dl>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/watchers/components/templates/trigger.html\n// module id = ./src/app/watchers/components/templates/trigger.html\n// module chunks = 1","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ScriptletDataObject } from '../model/scriptlet.data.object';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'trigger',\r\n  template: require('./templates/trigger.html'),\r\n  styles: ['.flatbar { width: 100% !important; text-align: left !important; margin-left: -15px !important; }']\r\n})\r\nexport class TriggerComponent {\r\n    @Input() entity: ScriptletDataObject = undefined;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/components/trigger.component.ts","import { ColoredAttributePredicate } from './colored.predicate';\r\n\r\nexport class ColoredAttributeChecker {\r\n    public green:ColoredAttributePredicate = undefined;\r\n    public yellow:ColoredAttributePredicate = undefined;\r\n\r\n    public toJSON():any {\r\n        let _value:any = {};\r\n        _value[\"green\"] = this.green.toJSON();\r\n        _value[\"yellow\"] = this.yellow.toJSON();\r\n        return _value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/colored.checker.ts","export abstract class ColoredAttributePredicate {\r\n    public static CONSTANT:string = \"constant\";\r\n    public static COMPARATOR:string = \"comparator\";\r\n    public static RANGE:string = \"isInRange\";\r\n\r\n    public abstract toJSON():any;\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/colored.predicate.ts","import { ColoredAttributePredicate } from './colored.predicate';\r\n\r\nexport class ConstantAttributePredicate extends ColoredAttributePredicate {\r\n    public type:string = ColoredAttributePredicate.CONSTANT;\r\n    public value:boolean;\r\n\r\n    public toJSON():any {\r\n        let _value:any = {};\r\n        _value[\"@type\"] = this.type;\r\n        _value[\"value\"] = this.value;\r\n        return _value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/constant.attribute.predicate.ts","export abstract class Entity {\n    public name:string;\n    public guid:string;\n    public parameters : KeyValue[] = [];\n    constructor(name:string, parameters: { [key:string]:string; }) {\n        this.name = name;\n        this.guid = Guid.newGuid();\n        for (let key in parameters) {\n            this.parameters.push(new KeyValue(key, parameters[key]));\n        }\n    }\n\n    public getParameter(key:string):KeyValue {\n       return KeyValue.getParameterByName(this.parameters, key);\n    }\n\n    public contains(key:string):boolean {\n        return this.getParameter(key) != undefined;\n    }\n\n    public removeParameter(key:string) {\n        for (let i = 0; i < this.parameters.length; i++) {\n            if (this.parameters[i].key == key) {\n                this.parameters.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    public setParameter(parameter:KeyValue) {\n        let found:boolean = false;\n        for (let i = 0; i < this.parameters.length; i++) {\n          if (this.parameters[i].key == parameter.key) {\n            this.parameters[i].value = parameter.value;\n            found = true;\n            break;\n          }\n        }\n        // if nothing is found - just push it into the array\n        if (!found) {\n            this.parameters.push(parameter);\n        }\n    }\n\n    public clearParameters() {\n        this.parameters = [];\n    }\n\n    private decapitalizeFirstLetter(object:string):string {\n        return object.charAt(0).toLowerCase() + object.slice(1);\n    }\n\n    // see https://www.stevefenton.co.uk/2013/04/obtaining-a-class-name-at-runtime-in-typescript/\n    getName() {\n        var funcNameRegex = /function (.{1,})\\(/;\n        var results = (funcNameRegex).exec((<any> this).constructor.toString());\n        return (results && results.length > 1) ? this.decapitalizeFirstLetter(results[1]) : \"\";\n    }\n\n    public stringifyParameters():any {\n        return KeyValue.stringifyParametersStatic(this.parameters);\n    }\n}\n\nexport class KeyValue {\n    public key:string;\n    public value:string;\n    constructor(key:string, value:string){\n        this.key = key;\n        this.value = value;\n    };\n\n    public static getParameterByName(inputParams:KeyValue[], inputName:string):KeyValue {\n        let result:KeyValue = undefined;\n        if (inputParams != undefined) {\n            for (let i = 0; i < inputParams.length; i++) {\n                if (inputName === inputParams[i].key) {\n                    result = inputParams[i];\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    public static stringifyParametersStatic(value:KeyValue[]): any {\n        let returnValue:{ [key:string]:string; } = {};\n            value.forEach(function(obj){\n                returnValue[obj.key] = obj.value;\n            });\n        return returnValue;\n    }\n}\n\n// http://stackoverflow.com/questions/26501688/a-typescript-guid-class\nexport class Guid {\n    static newGuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n            return v.toString(16);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/entity.ts","import { Watcher } from './watcher';\r\nimport { ScriptletDataObject } from './scriptlet.data.object';\r\n\r\nexport class Factory {\r\n\r\n    public static watcherFromJSON(name:string, json:any):Watcher {\r\n        let _watcher:Watcher = new Watcher(name, json[\"parameters\"]);\r\n        if (json[\"attributeCheckers\"] != undefined) {\r\n            for (let key in json[\"attributeCheckers\"]) {\r\n                _watcher.attributeCheckers[key] = ScriptletDataObject.fromJSON(json[\"attributeCheckers\"][key]);\r\n            }\r\n        }\r\n        if (json[\"trigger\"] != undefined) {\r\n            _watcher.trigger = ScriptletDataObject.fromJSON(json[\"trigger\"]);\r\n        }\r\n        return _watcher;\r\n    }\r\n\r\n    public static watchersArrayFromJSON(json:any):Watcher[] {\r\n        let result:Watcher[] = [];\r\n        for (let key in json) {\r\n            result.push(Factory.watcherFromJSON(key, json[key]));\r\n        }\r\n        return result;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/factory.ts","import { ColoredAttributePredicate } from './colored.predicate';\r\n\r\nexport class NumberComparatorPredicate extends ColoredAttributePredicate {\r\n    public type:string = ColoredAttributePredicate.COMPARATOR;\r\n    public operator:string;\r\n    public value:number;\r\n\r\n    public toJSON():any {\r\n        let _value:any = {};\r\n        _value[\"@type\"] = this.type;\r\n        _value[\"operator\"] = this.operator;\r\n        _value[\"value\"] = this.value;\r\n        return _value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/number.comparator.predicate.ts","import { ColoredAttributePredicate } from './colored.predicate';\r\n\r\nexport class IsInRangePredicate extends ColoredAttributePredicate {\r\n    public type:string = ColoredAttributePredicate.RANGE;\r\n    public rangeStart:number;\r\n    public rangeEnd:number;\r\n    public isRangeStartInclusive:boolean;\r\n    public isRangeEndInclusive:boolean;\r\n\r\n    public toJSON():any {\r\n        let _value:any = {};\r\n        _value[\"@type\"] = this.type;\r\n        _value[\"rangeStart\"] = this.rangeStart;\r\n        _value[\"rangeEnd\"] = this.rangeEnd;\r\n        _value[\"isRangeStartInclusive\"] = this.rangeStart;\r\n        _value[\"isRangeEndInclusive\"] = this.rangeEnd;\r\n        return _value;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/range.comparator.ts","import { ColoredAttributePredicate } from './colored.predicate';\r\nimport { ConstantAttributePredicate } from './constant.attribute.predicate';\r\nimport { NumberComparatorPredicate } from './number.comparator.predicate';\r\nimport { IsInRangePredicate } from './range.comparator';\r\nimport { Guid } from './entity';\r\n\r\nimport { ColoredAttributeChecker } from './colored.checker';\r\n\r\nexport class ScriptletDataObject {\r\n    public language:string;\r\n    public script:string;\r\n    public isURL:boolean;\r\n    public object:ColoredAttributeChecker;\r\n    public id:string = Guid.newGuid();\r\n\r\n    constructor(){\r\n        this.language = \"n/a\";\r\n        this.script = \"empty\";\r\n        this.isURL = false;\r\n        this.object = undefined;\r\n    }\r\n\r\n    public shortScript():string {\r\n        return ((this.script.length > 60) ? this.script.substring(0, 60) + '...' : this.script);\r\n    }\r\n\r\n    public static fromJSON(json:string):ScriptletDataObject {\r\n        let instance:ScriptletDataObject = new ScriptletDataObject();\r\n        if (json[\"language\"] != undefined) {\r\n            instance.language = json[\"language\"];\r\n        }\r\n        if (json[\"script\"] != undefined) {\r\n            instance.script = json[\"script\"];\r\n        }\r\n        if (json[\"isURL\"] != undefined) {\r\n            instance.isURL = (json[\"isURL\"] == 'true');\r\n        }\r\n        switch(instance.language) {\r\n            case \"Groovy\":\r\n            case \"JavaScript\":\r\n                instance.object = undefined;\r\n                break;\r\n            case \"ColoredAttributeChecker\":\r\n                instance.object = new ColoredAttributeChecker();\r\n                if (instance.script == undefined || instance.script.length < 5) {\r\n                    return instance;\r\n                }\r\n                let _jsonChecker:any = JSON.parse(instance.script);\r\n                let _yellow = _jsonChecker[\"yellow\"];\r\n                switch (_yellow[\"@type\"]) {\r\n                     case ColoredAttributePredicate.CONSTANT:\r\n                        instance.object.yellow = new ConstantAttributePredicate();\r\n                        (<ConstantAttributePredicate>instance.object.yellow).value = _yellow[\"value\"];\r\n                        break;\r\n                     case ColoredAttributePredicate.COMPARATOR:\r\n                         instance.object.yellow = new NumberComparatorPredicate();\r\n                         (<NumberComparatorPredicate>instance.object.yellow).value = _yellow[\"value\"];\r\n                         (<NumberComparatorPredicate>instance.object.yellow).operator = _yellow[\"operator\"];\r\n                         break;\r\n                     case ColoredAttributePredicate.RANGE:\r\n                         instance.object.yellow = new IsInRangePredicate();\r\n                         (<IsInRangePredicate>instance.object.yellow).rangeStart = _yellow[\"rangeStart\"];\r\n                         (<IsInRangePredicate>instance.object.yellow).rangeEnd = _yellow[\"rangeEnd\"];\r\n                         (<IsInRangePredicate>instance.object.yellow).isRangeEndInclusive = _yellow[\"isRangeEndInclusive\"];\r\n                         (<IsInRangePredicate>instance.object.yellow).isRangeStartInclusive = _yellow[\"isRangeStartInclusive\"];\r\n                         break;\r\n                     default:\r\n                        throw new Error(\"Could not recognize yellow checker type: \" + _yellow[\"@type\"]);\r\n                }\r\n\r\n                let _green = _jsonChecker[\"green\"];\r\n                switch (_green[\"@type\"]) {\r\n                     case ColoredAttributePredicate.CONSTANT:\r\n                        instance.object.green = new ConstantAttributePredicate();\r\n                        (<ConstantAttributePredicate>instance.object.green).value = _green[\"value\"];\r\n                        break;\r\n                     case ColoredAttributePredicate.COMPARATOR:\r\n                         instance.object.green = new NumberComparatorPredicate();\r\n                         (<NumberComparatorPredicate>instance.object.green).value = _green[\"value\"];\r\n                         (<NumberComparatorPredicate>instance.object.green).operator = _green[\"operator\"];\r\n                         break;\r\n                     case ColoredAttributePredicate.RANGE:\r\n                         instance.object.green = new IsInRangePredicate();\r\n                         (<IsInRangePredicate>instance.object.green).rangeStart = _green[\"rangeStart\"];\r\n                         (<IsInRangePredicate>instance.object.green).rangeEnd = _green[\"rangeEnd\"];\r\n                         (<IsInRangePredicate>instance.object.green).isRangeEndInclusive = _green[\"isRangeEndInclusive\"];\r\n                         (<IsInRangePredicate>instance.object.green).isRangeStartInclusive = _green[\"isRangeStartInclusive\"];\r\n                         break;\r\n                     default:\r\n                        throw new Error(\"Could not recognize green checker type: \" + _green[\"@type\"]);\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"Cannot recognize language type: \" + instance.language);\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    public toJSON():any {\r\n        let _value:any = {};\r\n        _value[\"language\"] = this.language;\r\n        _value[\"script\"] = this.script;\r\n        _value[\"isURL\"] = this.isURL;\r\n        return _value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/scriptlet.data.object.ts","import { Entity } from './entity';\r\nimport { ScriptletDataObject } from './scriptlet.data.object';\r\n\r\nexport class Watcher extends Entity {\r\n    public attributeCheckers:{ [key:string]:ScriptletDataObject; } = {};\r\n    public trigger:ScriptletDataObject = undefined;\r\n\r\n    public toJSON():any {\r\n         let _value:any = {};\r\n        _value[\"attributeCheckers\"] = {};\r\n        for (let key in this.attributeCheckers) {\r\n            _value[\"attributeCheckers\"][key] = this.attributeCheckers[key].toJSON();\r\n        }\r\n        _value[\"trigger\"] = this.trigger.toJSON();\r\n        _value[\"parameters\"] = this.stringifyParameters();\r\n        return _value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/watcher.ts","\n        var result = require(\"!!./../../../../../node_modules/css-loader/index.js!./main.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/watchers/templates/css/main.css\n// module id = ./src/app/watchers/templates/css/main.css\n// module chunks = 1","module.exports = \"<div class=\\\"right_col\\\" role=\\\"main\\\" style=\\\"min-height: 949px;\\\">\\r\\n  <div class=\\\"\\\">\\r\\n    <div class=\\\"page-title\\\">\\r\\n      <div class=\\\"title_left\\\">\\r\\n        <h3>Setup watchers</h3>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n    <div class=\\\"row\\\" style=\\\"margin-top: 30px\\\">\\r\\n\\r\\n      <panel [header]=\\\"'List of watchers'\\\" [column]=\\\"'12'\\\">\\r\\n        <table class=\\\"table\\\">\\r\\n          <thead class=\\\"thead-inverse\\\">\\r\\n          <tr>\\r\\n            <th>Name</th>\\r\\n            <th>Trigger</th>\\r\\n            <th>Checkers</th>\\r\\n          </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n          <tr *ngFor=\\\"let watcher of watchers\\\">\\r\\n            <th scope=\\\"row\\\">{{watcher.name}}</th>\\r\\n            <td>\\r\\n              <checkers [entity]=\\\"watcher.attributeCheckers\\\"></checkers>\\r\\n            </td>\\r\\n            <td>\\r\\n              <trigger [entity]=\\\"watcher.trigger\\\"></trigger>\\r\\n            </td>\\r\\n          </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n      </panel>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/watchers/templates/main.html\n// module id = ./src/app/watchers/templates/main.html\n// module chunks = 1","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/watchers/templates/template.html\n// module id = ./src/app/watchers/templates/template.html\n// module chunks = 1","import { NgModule }      from '@angular/core';\r\nimport { CommonModule }  from '@angular/common';\r\nimport { ApiClient }     from '../app.restClient';\r\nimport { TooltipModule } from 'ng2-tooltip';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { PanelComponent } from '../panel.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ModalModule } from 'angular2-modal';\r\nimport {\r\n  VexModalModule,\r\n  providers\r\n} from 'angular2-modal/plugins/vex';\r\nimport { CommonSnampUtilsModule } from '../app.module';\r\n\r\nimport { TemplateComponent } from './watchers.template';\r\nimport { MainComponent } from './watchers.view';\r\n\r\nimport { CheckersComponent } from './components/checkers.component';\r\nimport { TriggerComponent } from './components/trigger.component';\r\n\r\nconst PROVIDERS:any =  [\r\n  ApiClient,\r\n  providers\r\n];\r\n\r\n@NgModule({\r\n   imports: [\r\n      CommonModule,\r\n      TooltipModule,\r\n      FormsModule,\r\n      ModalModule.forRoot(),\r\n      VexModalModule,\r\n      HttpModule,\r\n      CommonSnampUtilsModule,\r\n      RouterModule.forChild([{\r\n            path: '', component: TemplateComponent, children: [\r\n                { path: '', component: MainComponent }\r\n            ]\r\n      }])\r\n    ],\r\n    declarations: [ TemplateComponent, MainComponent, CheckersComponent, TriggerComponent ],\r\n    providers:    PROVIDERS\r\n})\r\nexport class WatchersModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/watchers.modules.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  template: require('./templates/template.html'),\r\n})\r\nexport class TemplateComponent {}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/watchers.template.ts","import { Component, OnInit } from '@angular/core';\r\nimport { ApiClient, REST } from '../app.restClient';\r\nimport { Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { Factory } from './model/factory';\r\nimport { Watcher } from './model/watcher';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport 'rxjs/add/operator/publishLast';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  template: require('./templates/main.html'),\r\n  styles: [ require('./templates/css/main.css') ]\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n    private http:ApiClient;\r\n    components:Observable<string[]>;\r\n    private watchers:Watcher[] = [];\r\n\r\n    constructor(apiClient: ApiClient, private _router: Router) {\r\n        this.http = apiClient;\r\n   }\r\n\r\n   ngOnInit():void {\r\n        this.http.get(REST.WATCHERS_LIST)\r\n            .map((res:Response) => res.json())\r\n            .subscribe((data) => {\r\n                this.watchers = Factory.watchersArrayFromJSON(data);\r\n                console.log(\"Watchers list is: \", data, this.watchers);\r\n            });\r\n\r\n        this.components = this.http.get(REST.CHART_COMPONENTS)\r\n            .map((res:Response) => { return <string[]>res.json()})\r\n            .publishLast().refCount();\r\n\r\n   }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/watchers.view.ts"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACPA;AASA;AAAA;AACA;AACA;AADA;AAAA;;AAAA;AAPA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;AAAA;AAFA;;;;;;;;ACTA;;;;;;;ACAA;;;;;;;;;ACAA;AACA;AAQA;AAAA;AACA;AACA;AADA;AAAA;;AAAA;AAPA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;;AAAA;AAFA;;;;;;;;;;ACPA;AAAA;AACA;AACA;AAQA;AANA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;;;;;;ACFA;AAAA;AAMA;AALA;AACA;AACA;AAGA;AAAA;AANA;;;;;;;;;;ACAA;AAEA;AAAA;AAAA;AAAA;AACA;AASA;AANA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;;;;;;ACFA;AAIA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AA9DA;AAgEA;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA5BA;AA8BA;AACA;AAAA;AAOA;AANA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAPA;;;;;;;;;;AC/FA;AACA;AAEA;AAAA;AAsBA;AApBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAtBA;;;;;;;;;;ACHA;AAEA;AAAA;AAAA;AAAA;AACA;AAWA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAZA;;;;;;;;;;ACFA;AAEA;AAAA;AAAA;AAAA;AACA;AAgBA;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAjBA;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAOA;AAFA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAjGA;;;;;;;;;;ACRA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AAYA;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAdA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;;;;;;;ACAA;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAoBA;AAAA;AAAA;AAlBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;AC5CA;AAMA;AAAA;AAAA;AAJA;AAAA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;ACNA;AACA;AAIA;AAGA;AAEA;AAOA;AAMA;AAAA;AAFA;AAGA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AA3BA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AAyBA;;AAAA;AAxBA;;;;;","sourceRoot":""}