{"version":3,"file":"1.chunk.js","sources":["webpack:///./src/app/watchers/templates/css/main.css","webpack:///./src/app/watchers/templates/css/statuses.css","webpack:///./src/app/watchers/components/checkers.component.ts","webpack:///./src/app/watchers/components/condition.block.ts","webpack:///./src/app/watchers/components/templates/checkers.html","webpack:///./src/app/watchers/components/templates/condition.html","webpack:///./src/app/watchers/components/templates/trigger.html","webpack:///./src/app/watchers/components/trigger.component.ts","webpack:///./src/app/watchers/model/colored.checker.ts","webpack:///./src/app/watchers/model/colored.predicate.ts","webpack:///./src/app/watchers/model/constant.attribute.predicate.ts","webpack:///./src/app/watchers/model/entity.ts","webpack:///./src/app/watchers/model/factory.ts","webpack:///./src/app/watchers/model/number.comparator.predicate.ts","webpack:///./src/app/watchers/model/range.comparator.ts","webpack:///./src/app/watchers/model/scriptlet.data.object.ts","webpack:///./src/app/watchers/model/watcher.ts","webpack:///./src/app/watchers/templates/css/main.css?2840","webpack:///./src/app/watchers/templates/css/statuses.css?0241","webpack:///./src/app/watchers/templates/main.html","webpack:///./src/app/watchers/templates/statuses.html","webpack:///./src/app/watchers/templates/template.html","webpack:///./src/app/watchers/watchers.dashboard.ts","webpack:///./src/app/watchers/watchers.modules.ts","webpack:///./src/app/watchers/watchers.pipes.ts","webpack:///./src/app/watchers/watchers.template.ts","webpack:///./src/app/watchers/watchers.view.ts"],"sourcesContent":["exports = module.exports = require(\"./../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".form-group {\\r\\n    margin-bottom: 10px;\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.btn-inline {\\r\\n    display: inline-block;\\r\\n    margin-left: 15px;\\r\\n}\\r\\n\\r\\n.btn-pull-right {\\r\\n    margin-top:20px;\\r\\n    float:right;\\r\\n    margin-right: 20px;\\r\\n}\\r\\n\\r\\n.row-margin-bottom-sm {\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.activeTr {\\r\\n    background-color: #b9c7de;\\r\\n}\\r\\n\\r\\n.img-inline {\\r\\n    display: inline-block;\\r\\n    margin-right: 10px;\\r\\n    padding: 3px;\\r\\n}\\r\\n\\r\\n.clickableTr {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.input-group-addon {\\r\\n    border: 0 !important;\\r\\n    background-color: rgba(0,0,0,0) !important;\\r\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/watchers/templates/css/main.css\n// module id = ./node_modules/css-loader/index.js!./src/app/watchers/templates/css/main.css\n// module chunks = 1","exports = module.exports = require(\"./../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/* grid-item\\r\\n------------------------- */\\r\\n\\r\\n.grid-item {\\r\\n  position: relative;\\r\\n  float: left;\\r\\n  width: 123px;\\r\\n  height: 123px;\\r\\n  margin: 10px;\\r\\n  padding: 10px;\\r\\n  background: #888;\\r\\n  color: #262524;\\r\\n}\\r\\n\\r\\n.componentOk {\\r\\n  background: #228B22 !important;\\r\\n}\\r\\n\\r\\n.componentError  {\\r\\n  background: #F08080 !important;\\r\\n}\\r\\n\\r\\n.grid-item > * {\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.grid-item .name {\\r\\n  position: absolute;\\r\\n\\r\\n  left: 10px;\\r\\n  top: 55px;\\r\\n  text-transform: none;\\r\\n  letter-spacing: 0;\\r\\n  font-weight: normal;\\r\\n}\\r\\n\\r\\n.grid-item .symbol {\\r\\n  position: absolute;\\r\\n  left: 10px;\\r\\n  top: 0px;\\r\\n  font-weight: bold;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.grid-item .number {\\r\\n  position: absolute;\\r\\n  right: 8px;\\r\\n  top: 5px;\\r\\n}\\r\\n\\r\\n.grid-item .weight {\\r\\n  position: absolute;\\r\\n  left: 9px;\\r\\n  top: 107px;\\r\\n  font-size: 0.8em;\\r\\n}\\r\\n\\r\\n.grid-item .bundleInfo {\\r\\n  position: absolute;\\r\\n  left: 117px;\\r\\n  top: 117px;\\r\\n  font-size: medium;\\r\\n}\\r\\n\\r\\n.grid-item-link {\\r\\n    display: inline-block;\\r\\n    border: 1px solid #dddddd;\\r\\n    border-radius: 4px;\\r\\n    -webkit-transition: border 0.2s ease-in-out;\\r\\n    -o-transition: border 0.2s ease-in-out;\\r\\n    transition: border 0.2s ease-in-out;\\r\\n    margin: 5px 5px 20px 5px;\\r\\n}\\r\\n\\r\\na.grid-item-link:hover,\\r\\na.grid-item-link:focus,\\r\\na.grid-item-link.active {\\r\\n  border-color: #337ab7;\\r\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/watchers/templates/css/statuses.css\n// module id = ./node_modules/css-loader/index.js!./src/app/watchers/templates/css/statuses.css\n// module chunks = 1","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ScriptletDataObject } from '../model/scriptlet.data.object';\r\n\r\nimport { ColoredAttributePredicate } from '../model/colored.predicate';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'checkers',\r\n  template: require('./templates/checkers.html'),\r\n  styles: ['.btn-inline { display: inline-block; margin-left: 15px; } .normalspaces {  white-space: normal; }']\r\n})\r\nexport class CheckersComponent {\r\n    @Input() entity:{ [key:string]:ScriptletDataObject; } = {};\r\n    @Input() hideDetails:boolean = false;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/components/checkers.component.ts","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { ColoredAttributePredicate } from '../model/colored.predicate';\r\n\r\nimport { ConstantAttributePredicate } from '../model/constant.attribute.predicate';\r\nimport { NumberComparatorPredicate } from '../model/number.comparator.predicate';\r\nimport { IsInRangePredicate } from '../model/range.comparator';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'coloredCondition',\r\n  template: require('./templates/condition.html')\r\n})\r\nexport class ColoredCondition {\r\n    @Input() entity: ColoredAttributePredicate = undefined;\r\n    @Output() notify: EventEmitter<ColoredAttributePredicate> = new EventEmitter<ColoredAttributePredicate>();\r\n\r\n    entityType: string = \"\";\r\n\r\n    conditionsType:EntityWithDescription[] = EntityWithDescription.generateConditionsTypes();\r\n    constantExpressions:EntityWithDescription[] = EntityWithDescription.generateTrueFalseTypes();\r\n    operators:EntityWithDescription[] = EntityWithDescription.generateOperatorsTypes();\r\n    rangeOperators:EntityWithDescription[] = EntityWithDescription.generateRangeTypes();\r\n\r\n    public isConstantType():boolean {\r\n        return (this.entity instanceof ConstantAttributePredicate);\r\n    }\r\n\r\n    public isOperatorType():boolean {\r\n        return (this.entity instanceof NumberComparatorPredicate);\r\n    }\r\n\r\n    public isRangeType():boolean {\r\n        return (this.entity instanceof IsInRangePredicate);\r\n    }\r\n\r\n    public onTypeChange(event:string):void {\r\n         switch (event) {\r\n             case \"ConstantAttributePredicate\":\r\n                this.entity = new ConstantAttributePredicate();\r\n                break;\r\n             case \"NumberComparatorPredicate\":\r\n                 this.entity = new NumberComparatorPredicate();\r\n                 break;\r\n             case \"IsInRangePredicate\":\r\n                 this.entity = new IsInRangePredicate();\r\n                 break;\r\n             default:\r\n                throw new Error(\"Could not recognize yellow checker type: \" + event);\r\n        }\r\n        this.entityType = event;\r\n        this.notify.emit(this.entity);\r\n    }\r\n\r\n    public onAnyChange():void {\r\n        this.notify.emit(this.entity);\r\n    }\r\n\r\n    ngOnInit():void {\r\n        this.entityType = (this.entity != undefined) ?  this.entity.constructor.name : \"\";\r\n    }\r\n\r\n    ngAfterViewInit():void {\r\n        console.log(\"Entity: \", this.entity, \", entityType: \", this.entityType);\r\n    }\r\n\r\n}\r\n\r\nexport class EntityWithDescription {\r\n    id:any;\r\n    description:string;\r\n\r\n    constructor(id:any, description:string) {\r\n        this.id = id;\r\n        this.description = description;\r\n    }\r\n\r\n    public static generateConditionsTypes():EntityWithDescription[] {\r\n        let _value:EntityWithDescription[] = [];\r\n        _value.push(new EntityWithDescription(\"ConstantAttributePredicate\", \"Boolean constant\"));\r\n        _value.push(new EntityWithDescription(\"NumberComparatorPredicate\", \"Compare with certain value\"));\r\n        _value.push(new EntityWithDescription(\"IsInRangePredicate\", \"Range comparator\"));\r\n        return _value;\r\n    }\r\n\r\n    public static generateTrueFalseTypes():EntityWithDescription[] {\r\n        let _value:EntityWithDescription[] = [];\r\n        _value.push(new EntityWithDescription(true, \"True\"));\r\n        _value.push(new EntityWithDescription(false, \"False\"));\r\n        return _value;\r\n    }\r\n\r\n    public static generateOperatorsTypes():EntityWithDescription[] {\r\n        let _value:EntityWithDescription[] = [];\r\n        _value.push(new EntityWithDescription(\"GREATER_THAN\", \">\"));\r\n        _value.push(new EntityWithDescription(\"GREATER_THAN_OR_EQUAL\", \"≥\"));\r\n        _value.push(new EntityWithDescription(\"LESS_THAN\", \"<\"));\r\n        _value.push(new EntityWithDescription(\"LESS_THAN_OR_EQUAL\", \"≤\"));\r\n        _value.push(new EntityWithDescription(\"EQUAL\", \"=\"));\r\n        _value.push(new EntityWithDescription(\"NOT_EQUAL\", \"≠\"));\r\n        return _value;\r\n    }\r\n\r\n    public static generateRangeTypes():EntityWithDescription[] {\r\n        let _value:EntityWithDescription[] = [];\r\n        _value.push(new EntityWithDescription(false, \">\"));\r\n        _value.push(new EntityWithDescription(true, \"≥\"));\r\n        return _value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/components/condition.block.ts","module.exports = \"<div>\\r\\n    <dl class=\\\"row\\\" *ngFor=\\\"let entry of entity | keys\\\">\\r\\n\\r\\n        <div class=\\\"modal fade\\\" *ngIf=\\\"!hideDetails\\\" [attr.id]=\\\"'details_' + entry.value.id\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"detailsLabel\\\">\\r\\n            <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n                <div class=\\\"modal-content\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n                        <h4 class=\\\"modal-title leftAlign\\\" id=\\\"detailsLabel\\\">Entity {{entry.value.name}} details</h4>\\r\\n                    </div>\\r\\n                    <br/>\\r\\n                    <div class=\\\"modal-body\\\" *ngIf=\\\"entry.value.object == undefined\\\">\\r\\n                        <pre class=\\\"normalspaces\\\"><code [innerHTML]=\\\"entry.value.script\\\"></code></pre>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-body\\\" *ngIf=\\\"entry.value.object != undefined\\\">\\r\\n                        <div class=\\\"alert alert-success\\\">\\r\\n                            <strong>Green condition: </strong>\\r\\n                            <div>\\r\\n                                <strong>{{entry.value.object.green.represent()}}</strong>\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"alert alert-warning\\\">\\r\\n                            <strong>Yellow condition: </strong>\\r\\n                            <div>\\r\\n                                <strong>{{entry.value.object.yellow.represent()}}</strong>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-footer\\\">\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <dt class=\\\"col-sm-3\\\">Attribute:</dt>\\r\\n        <dd class=\\\"col-sm-9\\\">{{entry.key}}</dd>\\r\\n\\r\\n        <dt class=\\\"col-sm-3\\\">Language:</dt>\\r\\n        <dd class=\\\"col-sm-9\\\">{{entry.value.language}}</dd>\\r\\n\\r\\n        <dt class=\\\"col-sm-3\\\">Is url:</dt>\\r\\n        <dd class=\\\"col-sm-9\\\">{{entry.value.isURL}}</dd>\\r\\n\\r\\n        <dt class=\\\"col-sm-3\\\">Script:</dt>\\r\\n        <dd class=\\\"col-sm-9\\\">{{entry.value.shortScript()}}\\r\\n            <button *ngIf=\\\"!hideDetails\\\"\\r\\n                    class=\\\"center-block btn btn-inline btn-sm\\\"\\r\\n                    data-toggle=\\\"modal\\\"\\r\\n                    [attr.data-target]=\\\"'#details_' + entry.value.id\\\">\\r\\n                <i class=\\\"fa fa-search\\\"></i> Details\\r\\n            </button>\\r\\n        </dd>\\r\\n    </dl>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/watchers/components/templates/checkers.html\n// module id = ./src/app/watchers/components/templates/checkers.html\n// module chunks = 1","module.exports = \"<div class=\\\"item form-inline\\\" style=\\\"margin-bottom: 15px;\\\">\\r\\n    <label\\r\\n            class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n            style=\\\"margin-top: 7px;\\\">\\r\\n        Type of condition <span class=\\\"required\\\">*</span>\\r\\n    </label>\\r\\n    <select class=\\\"form-control\\\" [(ngModel)]=\\\"entityType\\\" (ngModelChange)=\\\"onTypeChange($event)\\\">\\r\\n        <option *ngFor=\\\"let type of conditionsType\\\" [ngValue]=\\\"type.id\\\">{{type.description}}</option>\\r\\n    </select>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isConstantType()\\\">\\r\\n    <div class=\\\"item form-inline\\\">\\r\\n        <label\\r\\n                class=\\\"custom-control col-md-3 col-sm-3 col-xs-8\\\"\\r\\n                style=\\\"margin-top: 7px;\\\">\\r\\n            Value is <span class=\\\"required\\\">*</span>\\r\\n        </label>\\r\\n        <select class=\\\"form-control col-md-1 col-sm-1 col-xs-4\\\" [(ngModel)]=\\\"entity.value\\\" (ngModelChange)=\\\"onAnyChange()\\\">\\r\\n            <option *ngFor=\\\"let exp of constantExpressions\\\" [ngValue]=\\\"exp.id\\\">{{exp.description}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isOperatorType()\\\">\\r\\n    <div class=\\\"item form-inline\\\">\\r\\n        <label\\r\\n                class=\\\"col-md-2 col-sm-2 col-xs-5\\\"\\r\\n                style=\\\"margin-top: 7px;\\\">\\r\\n            Value\\r\\n        </label>\\r\\n        <select class=\\\"form-control col-md-1 col-sm-1 col-xs-1\\\" [(ngModel)]=\\\"entity.operator\\\" (ngModelChange)=\\\"onAnyChange()\\\">\\r\\n            <option *ngFor=\\\"let operator of operators\\\" [ngValue]=\\\"operator.id\\\">{{operator.description}}</option>\\r\\n        </select>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control col-md-offset-1 col-md-3 col-sm-3 col-xs-6\\\" [(ngModel)]=\\\"entity.value\\\" (ngModelChange)=\\\"onAnyChange()\\\"/>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"isRangeType()\\\">\\r\\n    <div class=\\\"item form-inline\\\">\\r\\n        <input type=\\\"number\\\" class=\\\"form-control col-md-2 col-sm-2 col-xs-2\\\" [(ngModel)]=\\\"entity.rangeEnd\\\" (ngModelChange)=\\\"onAnyChange()\\\"/>\\r\\n        <select class=\\\"form-control col-md-1 col-sm-1 col-xs-1\\\" [(ngModel)]=\\\"entity.isRangeEndInclusive\\\" (ngModelChange)=\\\"onAnyChange()\\\">\\r\\n            <option *ngFor=\\\"let operator of rangeOperators\\\" [ngValue]=\\\"operator.id\\\">{{operator.description}}</option>\\r\\n        </select>\\r\\n        <label class=\\\"control-label col-md-1 col-sm-1 col-xs-1\\\" style=\\\"margin-top: 7px;\\\">\\r\\n            value\\r\\n        </label>\\r\\n        <select class=\\\"form-control col-md-1 col-sm-1 col-xs-1\\\" [(ngModel)]=\\\"entity.isRangeStartInclusive\\\" (ngModelChange)=\\\"onAnyChange()\\\">\\r\\n            <option *ngFor=\\\"let operator of rangeOperators\\\" [ngValue]=\\\"operator.id\\\">{{operator.description}}</option>\\r\\n        </select>\\r\\n        <input type=\\\"number\\\" class=\\\"form-control col-md-2 col-sm-2 col-xs-2\\\" [(ngModel)]=\\\"entity.rangeStart\\\" (ngModelChange)=\\\"onAnyChange()\\\"/>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/watchers/components/templates/condition.html\n// module id = ./src/app/watchers/components/templates/condition.html\n// module chunks = 1","module.exports = \"<div class=\\\"modal fade\\\" *ngIf=\\\"!hideDetails\\\" [attr.id]=\\\"'details_' + entity.id\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"addEntityLabel\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n        <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n                <h4 class=\\\"modal-title leftAlign\\\" id=\\\"addEntityLabel\\\">Entity {{entity.name}} details</h4>\\r\\n            </div>\\r\\n            <br/>\\r\\n            <div class=\\\"modal-body\\\">\\r\\n                <pre class=\\\"normalspaces\\\"><code [innerHTML]=\\\"entity.script\\\"></code></pre>\\r\\n            </div>\\r\\n            <div class=\\\"modal-footer\\\">\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div>\\r\\n    <dl class=\\\"row\\\">\\r\\n        <dt class=\\\"col-sm-3\\\">Language:</dt>\\r\\n        <dd class=\\\"col-sm-9\\\">{{entity.language}}</dd>\\r\\n\\r\\n        <dt class=\\\"col-sm-3\\\">Is url:</dt>\\r\\n        <dd class=\\\"col-sm-9\\\">{{entity.isURL}}</dd>\\r\\n\\r\\n        <dt class=\\\"col-sm-3\\\">Script:</dt>\\r\\n        <dd class=\\\"col-sm-9\\\">{{entity.shortScript()}}\\r\\n            <button *ngIf=\\\"!hideDetails\\\"\\r\\n                    class=\\\"center-block btn btn-inline btn-sm\\\"\\r\\n                    data-toggle=\\\"modal\\\"\\r\\n                    [attr.data-target]=\\\"'#details_' + entity.id\\\">\\r\\n                <i class=\\\"fa fa-search\\\"></i> Details\\r\\n            </button>\\r\\n        </dd>\\r\\n    </dl>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/watchers/components/templates/trigger.html\n// module id = ./src/app/watchers/components/templates/trigger.html\n// module chunks = 1","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ScriptletDataObject } from '../model/scriptlet.data.object';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'trigger',\r\n  template: require('./templates/trigger.html'),\r\n  styles: ['.btn-inline { display: inline-block; margin-left: 15px; } .normalspaces {  white-space: normal; }']\r\n})\r\nexport class TriggerComponent {\r\n    @Input() entity: ScriptletDataObject = undefined;\r\n    @Input() hideDetails:boolean = false;\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/components/trigger.component.ts","import { ColoredAttributePredicate } from './colored.predicate';\r\n\r\nexport class ColoredAttributeChecker {\r\n    public green:ColoredAttributePredicate = undefined;\r\n    public yellow:ColoredAttributePredicate = undefined;\r\n\r\n    public toJSON():any {\r\n        let _value:any = {};\r\n        _value[\"green\"] = this.green.toJSON();\r\n        _value[\"yellow\"] = this.yellow.toJSON();\r\n        return _value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/colored.checker.ts","export abstract class ColoredAttributePredicate {\r\n    public static CONSTANT:string = \"constant\";\r\n    public static COMPARATOR:string = \"comparator\";\r\n    public static RANGE:string = \"isInRange\";\r\n\r\n    public abstract toJSON():any;\r\n    public abstract represent():string;\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/colored.predicate.ts","import { ColoredAttributePredicate } from './colored.predicate';\r\n\r\nexport class ConstantAttributePredicate extends ColoredAttributePredicate {\r\n    public type:string = ColoredAttributePredicate.CONSTANT;\r\n    public value:boolean;\r\n\r\n    public toJSON():any {\r\n        let _value:any = {};\r\n        _value[\"@type\"] = this.type;\r\n        _value[\"value\"] = this.value;\r\n        return _value;\r\n    }\r\n\r\n    public represent():string {\r\n        return \"value = \" + (new Boolean(this.value)).toString();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/constant.attribute.predicate.ts","export abstract class Entity {\n    public name:string;\n    public guid:string;\n    public parameters : KeyValue[] = [];\n    constructor(name:string, parameters: { [key:string]:string; }) {\n        this.name = name;\n        this.guid = Guid.newGuid();\n        for (let key in parameters) {\n            this.parameters.push(new KeyValue(key, parameters[key]));\n        }\n    }\n\n    public getParameter(key:string):KeyValue {\n       return KeyValue.getParameterByName(this.parameters, key);\n    }\n\n    public contains(key:string):boolean {\n        return this.getParameter(key) != undefined;\n    }\n\n    public removeParameter(key:string) {\n        for (let i = 0; i < this.parameters.length; i++) {\n            if (this.parameters[i].key == key) {\n                this.parameters.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    public setParameter(parameter:KeyValue) {\n        let found:boolean = false;\n        for (let i = 0; i < this.parameters.length; i++) {\n          if (this.parameters[i].key == parameter.key) {\n            this.parameters[i].value = parameter.value;\n            found = true;\n            break;\n          }\n        }\n        // if nothing is found - just push it into the array\n        if (!found) {\n            this.parameters.push(parameter);\n        }\n    }\n\n    public clearParameters() {\n        this.parameters = [];\n    }\n\n    private decapitalizeFirstLetter(object:string):string {\n        return object.charAt(0).toLowerCase() + object.slice(1);\n    }\n\n    // see https://www.stevefenton.co.uk/2013/04/obtaining-a-class-name-at-runtime-in-typescript/\n    getName() {\n        var funcNameRegex = /function (.{1,})\\(/;\n        var results = (funcNameRegex).exec((<any> this).constructor.toString());\n        return (results && results.length > 1) ? this.decapitalizeFirstLetter(results[1]) : \"\";\n    }\n\n    public stringifyParameters():any {\n        return KeyValue.stringifyParametersStatic(this.parameters);\n    }\n}\n\nexport class KeyValue {\n    public key:string;\n    public value:string;\n    constructor(key:string, value:string){\n        this.key = key;\n        this.value = value;\n    };\n\n    public static getParameterByName(inputParams:KeyValue[], inputName:string):KeyValue {\n        let result:KeyValue = undefined;\n        if (inputParams != undefined) {\n            for (let i = 0; i < inputParams.length; i++) {\n                if (inputName === inputParams[i].key) {\n                    result = inputParams[i];\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    public static stringifyParametersStatic(value:KeyValue[]): any {\n        let returnValue:{ [key:string]:string; } = {};\n            value.forEach(function(obj){\n                returnValue[obj.key] = obj.value;\n            });\n        return returnValue;\n    }\n}\n\n// http://stackoverflow.com/questions/26501688/a-typescript-guid-class\nexport class Guid {\n    static newGuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n            return v.toString(16);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/entity.ts","import { Watcher } from './watcher';\r\nimport { ScriptletDataObject } from './scriptlet.data.object';\r\n\r\nexport class Factory {\r\n\r\n    public static watcherFromJSON(name:string, json:any):Watcher {\r\n        let _watcher:Watcher = new Watcher(name, json[\"parameters\"]);\r\n        if (json[\"attributeCheckers\"] != undefined && !$.isEmptyObject(json[\"attributeCheckers\"])) {\r\n            for (let key in json[\"attributeCheckers\"]) {\r\n                if (json[\"attributeCheckers\"][key][\"language\"] != undefined\r\n                    && json[\"attributeCheckers\"][key][\"language\"].length > 0) {\r\n                    _watcher.attributeCheckers[key] = ScriptletDataObject.fromJSON(json[\"attributeCheckers\"][key]);\r\n                }\r\n            }\r\n        }\r\n        if (json[\"trigger\"] != undefined\r\n            && !$.isEmptyObject(json[\"trigger\"])\r\n            && json[\"trigger\"][\"language\"] != undefined\r\n            && json[\"trigger\"][\"language\"].length > 0) {\r\n            _watcher.trigger = ScriptletDataObject.fromJSON(json[\"trigger\"]);\r\n        }\r\n        return _watcher;\r\n    }\r\n\r\n    public static watchersArrayFromJSON(json:any):Watcher[] {\r\n        console.log(\"Whole watchers configuration is: \", json);\r\n        let result:Watcher[] = [];\r\n        for (let key in json) {\r\n            result.push(Factory.watcherFromJSON(key, json[key]));\r\n        }\r\n        return result;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/factory.ts","import { ColoredAttributePredicate } from './colored.predicate';\r\n\r\nexport class NumberComparatorPredicate extends ColoredAttributePredicate {\r\n    public type:string = ColoredAttributePredicate.COMPARATOR;\r\n    public operator:string;\r\n    public value:number;\r\n\r\n    public toJSON():any {\r\n        let _value:any = {};\r\n        _value[\"@type\"] = this.type;\r\n        _value[\"operator\"] = this.operator;\r\n        _value[\"value\"] = this.value;\r\n        return _value;\r\n    }\r\n\r\n    public represent():string {\r\n        let _value:string = \"value \";\r\n        switch (this.operator) {\r\n            case \"GREATER_THAN\":\r\n                _value += \">\";\r\n                break;\r\n            case \"GREATER_THAN_OR_EQUAL\":\r\n                _value += \"≥\";\r\n                break;\r\n            case \"LESS_THAN\":\r\n                _value += \"<\";\r\n                break;\r\n            case \"LESS_THAN_OR_EQUAL\":\r\n                _value += \"≤\";\r\n                break;\r\n            case \"EQUAL\":\r\n                _value += \"=\";\r\n                break;\r\n            case \"NOT_EQUAL\":\r\n                _value += \"≠\";\r\n                break;\r\n            default:\r\n                throw new Error(\"Operator \" + this.operator + \"cannot be recognized\");\r\n        }\r\n        _value += \" \" + this.value;\r\n        return _value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/number.comparator.predicate.ts","import { ColoredAttributePredicate } from './colored.predicate';\r\n\r\nexport class IsInRangePredicate extends ColoredAttributePredicate {\r\n    public type:string = ColoredAttributePredicate.RANGE;\r\n    public rangeStart:number;\r\n    public rangeEnd:number;\r\n    public isRangeStartInclusive:boolean;\r\n    public isRangeEndInclusive:boolean;\r\n\r\n    public toJSON():any {\r\n        let _value:any = {};\r\n        _value[\"@type\"] = this.type;\r\n        _value[\"rangeStart\"] = this.rangeStart;\r\n        _value[\"rangeEnd\"] = this.rangeEnd;\r\n        _value[\"isRangeStartInclusive\"] = this.rangeStart;\r\n        _value[\"isRangeEndInclusive\"] = this.rangeEnd;\r\n        return _value;\r\n    }\r\n\r\n    public represent():string {\r\n        let _value:string = \"\";\r\n        _value += this.rangeEnd + \" \" + (this.isRangeEndInclusive ? \"≥\": \">\")\r\n            +  \" value \" + (this.isRangeStartInclusive ? \"≥\": \">\") + \" \" + this.rangeStart;\r\n        return _value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/range.comparator.ts","import { ColoredAttributePredicate } from './colored.predicate';\r\nimport { ConstantAttributePredicate } from './constant.attribute.predicate';\r\nimport { NumberComparatorPredicate } from './number.comparator.predicate';\r\nimport { IsInRangePredicate } from './range.comparator';\r\nimport { Guid } from './entity';\r\n\r\nimport { ColoredAttributeChecker } from './colored.checker';\r\n\r\nexport class ScriptletDataObject {\r\n    public language:string;\r\n    public script:string;\r\n    public isURL:boolean;\r\n    public object:ColoredAttributeChecker;\r\n    public id:string = Guid.newGuid();\r\n\r\n    constructor(){\r\n        this.language = \"Groovy\";\r\n        this.script = \"\";\r\n        this.isURL = false;\r\n        this.object = undefined;\r\n    }\r\n\r\n    public shortScript():string {\r\n        return ((this.script.length > 60) ? this.script.substring(0, 60) + '...' : this.script);\r\n    }\r\n\r\n    public static fromJSON(json:string):ScriptletDataObject {\r\n        console.log(\"Json from data object is: \", json);\r\n        let instance:ScriptletDataObject = new ScriptletDataObject();\r\n        if (json[\"language\"] != undefined) {\r\n            instance.language = json[\"language\"];\r\n        }\r\n        if (json[\"script\"] != undefined) {\r\n            instance.script = json[\"script\"];\r\n        }\r\n        if (json[\"isURL\"] != undefined) {\r\n            instance.isURL = (json[\"url\"] == 'true');\r\n        }\r\n        switch(instance.language) {\r\n            case \"Groovy\":\r\n            case \"JavaScript\":\r\n                instance.object = undefined;\r\n                break;\r\n            case \"ColoredAttributeChecker\":\r\n                instance.object = new ColoredAttributeChecker();\r\n                if (instance.script == undefined || instance.script.length < 5) {\r\n                    return instance;\r\n                }\r\n                let _jsonChecker:any = JSON.parse(instance.script);\r\n                let _yellow = _jsonChecker[\"yellow\"];\r\n                switch (_yellow[\"@type\"]) {\r\n                     case ColoredAttributePredicate.CONSTANT:\r\n                        instance.object.yellow = new ConstantAttributePredicate();\r\n                        (<ConstantAttributePredicate>instance.object.yellow).value = _yellow[\"value\"];\r\n                        break;\r\n                     case ColoredAttributePredicate.COMPARATOR:\r\n                         instance.object.yellow = new NumberComparatorPredicate();\r\n                         (<NumberComparatorPredicate>instance.object.yellow).value = _yellow[\"value\"];\r\n                         (<NumberComparatorPredicate>instance.object.yellow).operator = _yellow[\"operator\"];\r\n                         break;\r\n                     case ColoredAttributePredicate.RANGE:\r\n                         instance.object.yellow = new IsInRangePredicate();\r\n                         (<IsInRangePredicate>instance.object.yellow).rangeStart = _yellow[\"rangeStart\"];\r\n                         (<IsInRangePredicate>instance.object.yellow).rangeEnd = _yellow[\"rangeEnd\"];\r\n                         (<IsInRangePredicate>instance.object.yellow).isRangeEndInclusive = _yellow[\"isRangeEndInclusive\"];\r\n                         (<IsInRangePredicate>instance.object.yellow).isRangeStartInclusive = _yellow[\"isRangeStartInclusive\"];\r\n                         break;\r\n                     default:\r\n                        throw new Error(\"Could not recognize yellow checker type: \" + _yellow[\"@type\"]);\r\n                }\r\n\r\n                let _green = _jsonChecker[\"green\"];\r\n                switch (_green[\"@type\"]) {\r\n                     case ColoredAttributePredicate.CONSTANT:\r\n                        instance.object.green = new ConstantAttributePredicate();\r\n                        (<ConstantAttributePredicate>instance.object.green).value = _green[\"value\"];\r\n                        break;\r\n                     case ColoredAttributePredicate.COMPARATOR:\r\n                         instance.object.green = new NumberComparatorPredicate();\r\n                         (<NumberComparatorPredicate>instance.object.green).value = _green[\"value\"];\r\n                         (<NumberComparatorPredicate>instance.object.green).operator = _green[\"operator\"];\r\n                         break;\r\n                     case ColoredAttributePredicate.RANGE:\r\n                         instance.object.green = new IsInRangePredicate();\r\n                         (<IsInRangePredicate>instance.object.green).rangeStart = _green[\"rangeStart\"];\r\n                         (<IsInRangePredicate>instance.object.green).rangeEnd = _green[\"rangeEnd\"];\r\n                         (<IsInRangePredicate>instance.object.green).isRangeEndInclusive = _green[\"isRangeEndInclusive\"];\r\n                         (<IsInRangePredicate>instance.object.green).isRangeStartInclusive = _green[\"isRangeStartInclusive\"];\r\n                         break;\r\n                     default:\r\n                        throw new Error(\"Could not recognize green checker type: \" + _green[\"@type\"]);\r\n                }\r\n                break;\r\n            default:\r\n                throw new Error(\"Cannot recognize language type: \" + instance.language);\r\n        }\r\n        return instance;\r\n    }\r\n\r\n    public toJSON():any {\r\n        let _value:any = {};\r\n        _value[\"language\"] = this.language;\r\n        _value[\"script\"] = this.script;\r\n        _value[\"url\"] = this.isURL;\r\n        if (this.language == \"ColoredAttributeChecker\") {\r\n            if (this.object == undefined) {\r\n                throw new Error(\"Trying to serialize ColoredAttributeChecker instance without the object\");\r\n            } else {\r\n                this.script = JSON.stringify(this.object.toJSON());\r\n            }\r\n        }\r\n        console.log(\"Trying to stringify current scriptlet object: \", _value);\r\n        return _value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/scriptlet.data.object.ts","import { Entity } from './entity';\r\nimport { ScriptletDataObject } from './scriptlet.data.object';\r\n\r\nexport class Watcher extends Entity {\r\n    public attributeCheckers:{ [key:string]:ScriptletDataObject; } = {};\r\n    public trigger:ScriptletDataObject = new ScriptletDataObject();\r\n\r\n    public toJSON():any {\r\n        // console.log(\"JSONify the watcher from the watcher class: \", this);\r\n         let _value:any = {};\r\n        _value[\"attributeCheckers\"] = {};\r\n        for (let key in this.attributeCheckers) {\r\n            _value[\"attributeCheckers\"][key] = this.attributeCheckers[key].toJSON();\r\n        }\r\n        _value[\"trigger\"] = this.trigger.toJSON();\r\n        _value[\"parameters\"] = this.stringifyParameters();\r\n        return _value;\r\n    }\r\n\r\n    checkerExists(attributeName:string):boolean {\r\n        return this.attributeCheckers[attributeName] != undefined && this.attributeCheckers[attributeName].script.length > 0 ;\r\n    }\r\n\r\n    checkerTypeForAttributeName(attributeName:string):string {\r\n        return this.checkerExists(attributeName) ? this.attributeCheckers[attributeName].language : \"n/a\";\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/model/watcher.ts","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!./main.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/watchers/templates/css/main.css\n// module id = ./src/app/watchers/templates/css/main.css\n// module chunks = 1","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!./statuses.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/watchers/templates/css/statuses.css\n// module id = ./src/app/watchers/templates/css/statuses.css\n// module chunks = 1","module.exports = \"<div class=\\\"right_col\\\" role=\\\"main\\\" style=\\\"min-height: 949px;\\\">\\r\\n  <div class=\\\"\\\">\\r\\n    <div class=\\\"page-title\\\">\\r\\n      <div class=\\\"title_left\\\">\\r\\n        <h3>Setup watchers</h3>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n    <div class=\\\"row\\\" style=\\\"margin-top: 30px\\\">\\r\\n\\r\\n      <!-- Modal for edit the trigger for activeWatcher -->\\r\\n      <div class=\\\"modal fade\\\" id=\\\"editTriggerModal\\\" role=\\\"dialog\\\" aria-labelledby=\\\"editTriggerLabel\\\"  *ngIf=\\\"activeWatcher != undefined\\\">\\r\\n        <div class=\\\"modal-dialog modal-xlg modal-lg\\\" role=\\\"document\\\">\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n              <h4 class=\\\"modal-title leftAlign\\\" id=\\\"editTriggerLabel\\\">Edit trigger</h4>\\r\\n              <br/>\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                <div id=\\\"smartwizardForTrigger\\\" style=\\\"height: 95%\\\">\\r\\n                  <ul>\\r\\n                    <li>\\r\\n                      <a [attr.href]=\\\"'#language'\\\">\\r\\n                        Language<br />\\r\\n                        <small>Select language for trigger</small>\\r\\n                      </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                      <a [attr.href]=\\\"'#url'\\\">\\r\\n                        Use url<br />\\r\\n                        <small>Use URL for loading script</small>\\r\\n                      </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                      <a [attr.href]=\\\"'#script'\\\">\\r\\n                        Script<br />\\r\\n                        <small>Trigger's script</small>\\r\\n                      </a>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n\\r\\n                  <div style=\\\"height:100%\\\">\\r\\n                    <div id=\\\"language\\\" class=\\\"row\\\" style=\\\"margin-top: 100px;\\\">\\r\\n                      <div class=\\\"item form-group\\\">\\r\\n                        <label\\r\\n                                class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n                                for=\\\"languageSelect\\\"\\r\\n                                style=\\\"margin-top: 7px;\\\">\\r\\n                          Language <span class=\\\"required\\\">*</span>\\r\\n                        </label>\\r\\n                        <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\">\\r\\n                          <select class=\\\"form-control\\\" [(ngModel)]=\\\"activeWatcher.trigger.language\\\" id=\\\"languageSelect\\\">\\r\\n                            <option *ngFor=\\\"let language of triggerLanguages\\\" [ngValue]=\\\"language\\\">{{language}}</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"url\\\" class=\\\"row\\\" style=\\\"margin-top: 100px;\\\">\\r\\n                      <div class=\\\"item form-group\\\">\\r\\n                        <label\\r\\n                                class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n                                style=\\\"margin-top: 7px;\\\">\\r\\n                          Load script from external URL <span class=\\\"required\\\">*</span>\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\" >\\r\\n                          <ui-switch\\r\\n                                  [(ngModel)]=\\\"activeWatcher.trigger.isURL\\\"\\r\\n                                  [size]=\\\"'small'\\\">\\r\\n                          </ui-switch>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div id=\\\"script\\\" class=\\\"row\\\" style=\\\"margin-top: 20px;\\\">\\r\\n                      <div *ngIf=\\\"activeWatcher.trigger.isURL\\\">\\r\\n                        <div class=\\\"item form-group\\\">\\r\\n                          <label\\r\\n                                  class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n                                  for=\\\"urlForTrigger\\\"\\r\\n                                  style=\\\"margin-top: 7px;\\\">\\r\\n                            Url for script loading <span class=\\\"required\\\">*</span>\\r\\n                          </label>\\r\\n                          <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\">\\r\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"urlForTrigger\\\" placeholder=\\\"Input url for script to be loaded from\\\" [(ngModel)]=\\\"activeWatcher.trigger.script\\\"/>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div *ngIf=\\\"!activeWatcher.trigger.isURL\\\">\\r\\n                        <div>\\r\\n                          <div class=\\\"row\\\">\\r\\n                              <label\\r\\n                                      class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n                                      for=\\\"scriptBodyForTrigger\\\"\\r\\n                                      style=\\\"margin-top: 7px;\\\">\\r\\n                                Script body for the trigger <span class=\\\"required\\\">*</span>\\r\\n                             </label>\\r\\n                          </div>\\r\\n                          <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-md-12 col-sm-12 col-xs-12\\\">\\r\\n                              <textarea id=\\\"scriptBodyForTrigger\\\" rows=\\\"10\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"activeWatcher.trigger.script\\\"></textarea>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"col-md-2\\\" style=\\\"float:right; margin-top: 30px;\\\">\\r\\n                        <button class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"saveCurrentTrigger()\\\">Save trigger</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Modal for edit checkers for activeWatcher -->\\r\\n      <div class=\\\"modal fade\\\" id=\\\"editCheckerModal\\\" role=\\\"dialog\\\" aria-labelledby=\\\"editCheckerLabel\\\" *ngIf=\\\"activeWatcher != undefined\\\">\\r\\n        <div class=\\\"modal-dialog modal-xlg modal-lg\\\" role=\\\"document\\\">\\r\\n          <div class=\\\"modal-content\\\">\\r\\n            <div class=\\\"modal-header\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n              <h4 class=\\\"modal-title leftAlign\\\" id=\\\"editCheckerLabel\\\">Edit attribute checkers</h4>\\r\\n              <br/>\\r\\n              <div class=\\\"modal-body\\\">\\r\\n                <div id=\\\"smartwizardForCheckers\\\" style=\\\"height: 95%\\\">\\r\\n                  <ul>\\r\\n                    <li>\\r\\n                      <a [attr.href]=\\\"'#checkerTable'\\\">\\r\\n                        Select checker<br />\\r\\n                        <small>Select type of checker</small>\\r\\n                      </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                      <a [attr.href]=\\\"'#checkerType'\\\">\\r\\n                        Type<br />\\r\\n                        <small>Select type of checker</small>\\r\\n                      </a>\\r\\n                    </li>\\r\\n                    <li>\\r\\n                      <a [attr.href]=\\\"'#checkerBody'\\\">\\r\\n                        Checker's logic<br />\\r\\n                        <small>What action will be performed</small>\\r\\n                      </a>\\r\\n                    </li>\\r\\n                  </ul>\\r\\n\\r\\n                  <div style=\\\"height:100%\\\">\\r\\n\\r\\n                    <div id=\\\"checkerTable\\\" class=\\\"row\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                      <table class=\\\"table table-hover table-bordered\\\">\\r\\n                            <thead class=\\\"thead-inverse\\\">\\r\\n                            <tr>\\r\\n                              <th>Actions</th>\\r\\n                              <th>Attribute</th>\\r\\n                              <th>Binding</th>\\r\\n                              <th>Checker type</th>\\r\\n                            </tr>\\r\\n                            </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let attribute of attributes\\\" class=\\\"clickableTr\\\" [class.activeTr]=\\\"((selectedAttribute != undefined) && (selectedAttribute.name == attribute.name))\\\" (click)=\\\"editCheckerForAttribute(attribute)\\\">\\r\\n                              <td>\\r\\n                                  <span\\r\\n                                          class=\\\"glyphicon glyphicon-remove-circle btn btn-xs btn-danger\\\"\\r\\n                                          (click)=\\\"removeCheckerForAttribute(attribute)\\\"\\r\\n                                          aria-hidden=\\\"true\\\">\\r\\n                                  </span>\\r\\n                              </td>\\r\\n                              <th scope=\\\"row\\\">{{attribute.name}}</th>\\r\\n                              <td>\\r\\n                                <span class=\\\"input-group-addon\\\"  *ngIf=\\\"activeWatcher.checkerExists(attribute.name)\\\">\\r\\n                                      <span class=\\\"glyphicon glyphicon-ok glyph-icon-appended\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                                 </span>\\r\\n                              </td>\\r\\n                              <td>\\r\\n                                {{activeWatcher.checkerTypeForAttributeName(attribute.name)}}\\r\\n                              </td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                      </table>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div id=\\\"checkerType\\\" class=\\\"row\\\" style=\\\"margin-top: 100px;\\\">\\r\\n                      <div class=\\\"item form-group\\\">\\r\\n                        <label\\r\\n                                class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n                                for=\\\"checkerTypeSelect\\\"\\r\\n                                style=\\\"margin-top: 7px;\\\">\\r\\n                          Set type for attribute checker <span class=\\\"required\\\">*</span>\\r\\n                        </label>\\r\\n                        <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\">\\r\\n                          <select class=\\\"form-control\\\" [(ngModel)]=\\\"activeChecker.language\\\" id=\\\"checkerTypeSelect\\\" (ngModelChange)=\\\"selectCheckerType($event)\\\">\\r\\n                            <option *ngFor=\\\"let type of checkersType\\\" [ngValue]=\\\"type.id\\\">{{type.description}}</option>\\r\\n                          </select>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div id=\\\"checkerBody\\\" class=\\\"row\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                      <div *ngIf=\\\"activeChecker?.language != 'ColoredAttributeChecker'\\\" style=\\\"margin-top: 20px;\\\">\\r\\n\\r\\n                        <div class=\\\"item form-group\\\" style=\\\"margin-bottom: 15px;\\\">\\r\\n                          <label\\r\\n                                  class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n                                  style=\\\"margin-top: 7px;\\\">\\r\\n                            Load script from external URL <span class=\\\"required\\\">*</span>\\r\\n                          </label>\\r\\n\\r\\n                          <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\" >\\r\\n                            <ui-switch\\r\\n                                    [(ngModel)]=\\\"activeChecker.isURL\\\"\\r\\n                                    [size]=\\\"'small'\\\">\\r\\n                            </ui-switch>\\r\\n                          </div>\\r\\n                        </div>\\r\\n\\r\\n                            <div *ngIf=\\\"activeChecker?.isURL\\\">\\r\\n                              <div class=\\\"item form-group\\\">\\r\\n                                <label\\r\\n                                        class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n                                        for=\\\"urlForChecker\\\"\\r\\n                                        style=\\\"margin-top: 7px;\\\">\\r\\n                                  Url for script loading <span class=\\\"required\\\">*</span>\\r\\n                                </label>\\r\\n                                <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\">\\r\\n                                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"urlForChecker\\\" placeholder=\\\"Input url for script to be loaded from\\\" [(ngModel)]=\\\"activeChecker.script\\\"/>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"!activeChecker?.isURL\\\">\\r\\n                            <div class=\\\"item form-group\\\">\\r\\n                                <label\\r\\n                                        class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n                                        for=\\\"scriptBodyForChecker\\\"\\r\\n                                        style=\\\"margin-top: 7px;\\\">\\r\\n                                  Script body for the checker <span class=\\\"required\\\">*</span>\\r\\n                                </label>\\r\\n                                <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\">\\r\\n                                  <textarea id=\\\"scriptBodyForChecker\\\" rows=\\\"5\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"activeChecker.script\\\"></textarea>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div *ngIf=\\\"activeChecker?.language == 'ColoredAttributeChecker'\\\">\\r\\n                        <div class=\\\"panel-group group-accordeon\\\" id=\\\"accordionChecker\\\" role=\\\"tablist\\\" aria-multiselectable=\\\"true\\\">\\r\\n                          <div class=\\\"panel panel-default\\\" >\\r\\n                            <div class=\\\"panel-heading\\\" role=\\\"tab\\\" id=\\\"headingOne\\\">\\r\\n                              <h4 class=\\\"panel-title\\\">\\r\\n                                <a role=\\\"button\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordionChecker\\\" href=\\\"#collapseGreen\\\" aria-expanded=\\\"true\\\" aria-controls=\\\"collapseGreen\\\">\\r\\n                                  <img src=\\\"assets/img/green-circle.png\\\" class=\\\"img-inline\\\"> Green condition\\r\\n                                </a>\\r\\n                              </h4>\\r\\n                            </div>\\r\\n                            <div id=\\\"collapseGreen\\\" class=\\\"panel-collapse collapse in\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingOne\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                  <coloredCondition [entity]=\\\"activeChecker.object.green\\\" (notify)=\\\"onGreenNotify($event)\\\"></coloredCondition>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"panel panel-default\\\">\\r\\n                            <div class=\\\"panel-heading\\\" role=\\\"tab\\\" id=\\\"headingTwo\\\">\\r\\n                              <h4 class=\\\"panel-title\\\">\\r\\n                                <a class=\\\"collapsed\\\" role=\\\"button\\\" data-toggle=\\\"collapse\\\" data-parent=\\\"#accordionChecker\\\" href=\\\"#collapseYellow\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseYellow\\\">\\r\\n                                  <img src=\\\"assets/img/yellow-circle.png\\\" class=\\\"img-inline\\\"> Yellow condition\\r\\n                                </a>\\r\\n                              </h4>\\r\\n                            </div>\\r\\n                            <div id=\\\"collapseYellow\\\" class=\\\"panel-collapse collapse\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"headingTwo\\\">\\r\\n                              <div class=\\\"panel-body\\\">\\r\\n                                <coloredCondition [entity]=\\\"activeChecker.object.yellow\\\" (notify)=\\\"onYellowNotify($event)\\\"></coloredCondition>\\r\\n                              </div>\\r\\n                            </div>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n\\r\\n                      <div class=\\\"col-md-2\\\" style=\\\"float:right;\\\">\\r\\n                        <button class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"saveCurrentChecker()\\\">Save checker</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\"></div>\\r\\n\\r\\n      <panel [header]=\\\"getPanelHeader()\\\" [column]=\\\"'6'\\\" *ngIf=\\\"activeWatcher != undefined\\\">\\r\\n\\r\\n        <div class=\\\"row row-margin-bottom-sm\\\">\\r\\n          <label class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\" for=\\\"componentSelection\\\" style=\\\"margin-top:10px;\\\">\\r\\n              Component <span class=\\\"required\\\">*</span>\\r\\n          </label>\\r\\n          <div class=\\\"col-md-9 col-sm-9 col-xs-12\\\">\\r\\n            <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedComponent\\\" id=\\\"componentSelection\\\" (ngModelChange)=\\\"selectCurrentComponent($event)\\\">\\r\\n              <option  *ngFor=\\\"let component of components\\\" [ngValue]=\\\"component\\\">{{component}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row row-margin-bottom-sm\\\" *ngIf=\\\"!(attributes && attributes.length > 0)\\\">\\r\\n          <h5>Selected group does not contain attributes - please select another component or set some attributes</h5>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row row-margin-bottom-sm\\\">\\r\\n          <label class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\" for=\\\"componentSelection\\\" style=\\\"margin-top:10px;\\\">\\r\\n            Trigger\\r\\n          </label>\\r\\n          <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n            <button class=\\\"btn btn-primary\\\"\\r\\n                    [disabled]=\\\"!(attributes && attributes.length > 0)\\\"\\r\\n                    (click)=\\\"initTriggerModal()\\\"\\r\\n                    aria-hidden=\\\"true\\\"> Edit trigger\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row row-margin-bottom-sm\\\">\\r\\n          <label class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\" for=\\\"componentSelection\\\" style=\\\"margin-top:10px;\\\">\\r\\n            Checkers\\r\\n          </label>\\r\\n          <div class=\\\"col-md-4 col-sm-4 col-xs-12\\\">\\r\\n            <button class=\\\"btn btn-primary\\\"\\r\\n                    [disabled]=\\\"!(attributes && attributes.length > 0)\\\"\\r\\n                    (click)=\\\"initCheckersModal()\\\"\\r\\n                    aria-hidden=\\\"true\\\"> Edit checkers\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row\\\" style=\\\"margin-top: 20px;\\\">\\r\\n            <div style=\\\"float:right\\\">\\r\\n              <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"saveActiveWatcher()\\\" [disabled]=\\\"!(attributes && attributes.length > 0)\\\">Save</button>\\r\\n              <button class=\\\"btn btn-sm\\\" (click)=\\\"cleanSelection()\\\">Cancel/clean</button>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n      </panel>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" style=\\\"margin-top: 10px\\\">\\r\\n      <panel [header]=\\\"'List of watchers'\\\" [column]=\\\"'12'\\\">\\r\\n        <table class=\\\"table table-hover table-bordered\\\">\\r\\n          <thead class=\\\"thead-inverse\\\">\\r\\n          <tr>\\r\\n            <th>Actions</th>\\r\\n            <th>Name</th>\\r\\n            <th>Checkers</th>\\r\\n            <th>Trigger</th>\\r\\n          </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n          <tr *ngFor=\\\"let watcher of watchers\\\">\\r\\n            <td>\\r\\n              <span\\r\\n                  class=\\\"glyphicon glyphicon-remove-circle btn btn-xs btn-danger\\\"\\r\\n                  (click)=\\\"removeWatcher(watcher)\\\"\\r\\n                  aria-hidden=\\\"true\\\">\\r\\n              </span>\\r\\n              <span\\r\\n                  class=\\\"glyphicon glyphicon-pencil btn btn-xs btn-primary\\\"\\r\\n                  (click)=\\\"editWatcher(watcher)\\\"\\r\\n                  aria-hidden=\\\"true\\\">\\r\\n              </span>\\r\\n            </td>\\r\\n            <th scope=\\\"row\\\">{{watcher.name}}</th>\\r\\n            <td>\\r\\n              <checkers [entity]=\\\"watcher.attributeCheckers\\\"></checkers>\\r\\n            </td>\\r\\n            <td>\\r\\n              <trigger [entity]=\\\"watcher.trigger\\\"></trigger>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td></td>\\r\\n            <td></td>\\r\\n            <td></td>\\r\\n            <td>\\r\\n              <button\\r\\n                      style=\\\"float:right;\\\"\\r\\n                      class=\\\"btn btn-primary btn-sm\\\"\\r\\n                      (click)=\\\"addNewWatcher()\\\">+ New watcher</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n      </panel>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/watchers/templates/main.html\n// module id = ./src/app/watchers/templates/main.html\n// module chunks = 1","module.exports = \"<div class=\\\"right_col\\\" role=\\\"main\\\" style=\\\"min-height: 949px;\\\">\\r\\n  <div class=\\\"\\\">\\r\\n    <div class=\\\"page-title\\\">\\r\\n      <div class=\\\"title_left\\\">\\r\\n        <h3>Resource groups statuses</h3>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n    <div class=\\\"row\\\" style=\\\"margin-top: 90px\\\">\\r\\n\\r\\n      <panel [header]=\\\"'Statuses of groups'\\\" [column]=\\\"'12'\\\" *ngIf=\\\"statuses && statuses.length > 0\\\">\\r\\n\\r\\n        <a *ngFor=\\\"let status of statuses\\\"\\r\\n           class=\\\"grid-item-link pointerElement\\\"\\r\\n           (click)=\\\"showDetails(status)\\\">\\r\\n\\r\\n          <div\\r\\n                   [class.componentError]=\\\"status.code != 0\\\"\\r\\n                   [class.componentOk]=\\\"status.code == 0\\\"\\r\\n                   class=\\\"grid-item\\\"\\r\\n                   [tooltip]=\\\"status.details()\\\">\\r\\n            <h5 class=\\\"name\\\">{{status.name}}</h5>\\r\\n            <p class=\\\"symbol\\\">{{status.resourceName}}</p>\\r\\n            <p class=\\\"weight\\\" *ngIf=\\\"status.code != 0\\\">{{status.getShortDescription()}}</p>\\r\\n          </div>\\r\\n        </a>\\r\\n      </panel>\\r\\n     </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/watchers/templates/statuses.html\n// module id = ./src/app/watchers/templates/statuses.html\n// module chunks = 1","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/watchers/templates/template.html\n// module id = ./src/app/watchers/templates/template.html\n// module chunks = 1","import { Component, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { ApiClient, REST } from '../services/app.restClient';\r\nimport { Response } from '@angular/http';\r\nimport { HealthStatus } from '../services/model/healthstatus/health.status';\r\n\r\nimport 'rxjs/add/operator/publishLast';\r\n\r\nimport { Overlay } from \"angular2-modal\";\r\nimport {\r\n  Modal,\r\n  OneButtonPresetBuilder,\r\n  TwoButtonPresetBuilder,\r\n  PromptPresetBuilder\r\n} from 'angular2-modal/plugins/bootstrap/index';\r\nimport {StatusFactory} from \"../services/model/healthstatus/factory\";\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  template: require('./templates/statuses.html'),\r\n  styles: [ require('./templates/css/statuses.css') ]\r\n})\r\nexport class WatcherDashboard implements OnInit {\r\n\r\n    private http:ApiClient;\r\n    timerId:any = undefined;\r\n    statuses:HealthStatus[] = [];\r\n\r\n    constructor(apiClient: ApiClient, private modal: Modal,  overlay: Overlay, vcRef: ViewContainerRef) {\r\n        this.http = apiClient;\r\n        overlay.defaultViewContainer = vcRef;\r\n   }\r\n\r\n   ngOnInit():void {}\r\n\r\n   ngAfterViewInit():void {\r\n        var _thisReference = this;\r\n        // load the list of watchers\r\n         this.timerId = setInterval(function(){\r\n              _thisReference.http.get(REST.SUPERVISORS_STATUS)\r\n                 .map((res:Response) => res.json())\r\n                 .subscribe((data) => {\r\n                    _thisReference.statuses = StatusFactory.parseAllStatuses(data);\r\n                 });\r\n         }, 2000);\r\n   }\r\n\r\n    ngOnDestroy() {\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    showDetails(status:HealthStatus):void {\r\n        console.log(\"details for status: \", status);\r\n        this.modal.alert()\r\n           .size('lg')\r\n           .title(\"Details for health status\")\r\n           .body(status.htmlDetails())\r\n           .isBlocking(false)\r\n           .keyboard(27)\r\n           .open()\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/watchers.dashboard.ts","import { NgModule }      from '@angular/core';\r\nimport { CommonModule }  from '@angular/common';\r\nimport { ApiClient }     from '../services/app.restClient';\r\nimport { TooltipModule } from 'ng2-tooltip';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ModalModule } from 'angular2-modal';\r\nimport {\r\n  VexModalModule,\r\n  providers\r\n} from 'angular2-modal/plugins/vex';\r\nimport { CommonSnampUtilsModule } from '../app.module';\r\n\r\nimport { TemplateComponent } from './watchers.template';\r\nimport { MainComponent } from './watchers.view';\r\nimport { WatcherDashboard } from './watchers.dashboard';\r\n\r\nimport { CheckersComponent } from './components/checkers.component';\r\nimport { TriggerComponent } from './components/trigger.component';\r\nimport { ColoredCondition } from './components/condition.block';\r\n\r\nimport { KeysPipe } from './watchers.pipes';\r\n\r\nconst PROVIDERS:any =  [\r\n  ApiClient,\r\n  providers\r\n];\r\n\r\n@NgModule({\r\n   imports: [\r\n      CommonModule,\r\n      TooltipModule,\r\n      FormsModule,\r\n      ModalModule.forRoot(),\r\n      VexModalModule,\r\n      HttpModule,\r\n      CommonSnampUtilsModule,\r\n      RouterModule.forChild([{\r\n            path: '', component: TemplateComponent, children: [\r\n                { path: '', component: MainComponent },\r\n                { path: 'dashboard', component: WatcherDashboard }\r\n            ]\r\n      }])\r\n    ],\r\n    declarations: [\r\n        TemplateComponent,\r\n        MainComponent,\r\n        WatcherDashboard,\r\n        CheckersComponent,\r\n        TriggerComponent,\r\n        ColoredCondition,\r\n        KeysPipe\r\n    ],\r\n    providers:    PROVIDERS\r\n})\r\nexport class WatchersModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/watchers.modules.ts","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'keys'})\r\nexport class KeysPipe implements PipeTransform {\r\n  transform(value, args:string[]) : any {\r\n    let keys = [];\r\n    for (let key in value) {\r\n      keys.push({key: key, value: value[key]});\r\n    }\r\n    return keys;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/watchers.pipes.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  template: require('./templates/template.html'),\r\n})\r\nexport class TemplateComponent {}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/watchers.template.ts","import { Component, OnInit, ViewContainerRef } from '@angular/core';\r\nimport { ApiClient, REST } from '../services/app.restClient';\r\nimport { Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Factory } from './model/factory';\r\nimport { Watcher } from './model/watcher';\r\nimport { ScriptletDataObject } from './model/scriptlet.data.object';\r\nimport { ColoredAttributePredicate } from './model/colored.predicate';\r\nimport { ColoredAttributeChecker } from './model/colored.checker';\r\nimport { AttributeInformation } from '../charts/model/attribute';\r\nimport { Overlay } from \"angular2-modal\";\r\nimport { VEXBuiltInThemes, Modal } from 'angular2-modal/plugins/vex';\r\n\r\nimport 'rxjs/add/operator/publishLast';\r\nimport 'smartwizard';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    template: require('./templates/main.html'),\r\n    styles: [require('./templates/css/main.css')]\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n    private components: string[] = [];\r\n    private watchers: Watcher[] = [];\r\n    private activeWatcher: Watcher = undefined;\r\n    private copyWatcher: Watcher = undefined;\r\n    private isNewEntity: boolean = true;\r\n\r\n    private selectedComponent: string = undefined;\r\n    private triggerInitialized: boolean = false;\r\n    private checkersInitialized: boolean = false;\r\n\r\n    private attributes: AttributeInformation[] = [];\r\n    private selectedAttribute: AttributeInformation = undefined;\r\n\r\n    private activeChecker: ScriptletDataObject = new ScriptletDataObject();\r\n\r\n    private checkersType: EntityWithDescription[] = EntityWithDescription.generateCheckersTypes();\r\n\r\n    private triggerLanguages: string[] = [\"Groovy\", \"JavaScript\"];\r\n\r\n    constructor(private http: ApiClient, private modal: Modal, overlay: Overlay, vcRef: ViewContainerRef) {\r\n        overlay.defaultViewContainer = vcRef;\r\n    }\r\n\r\n    saveCurrentTrigger(): void {\r\n        console.log(\"Trigger has been saved: \", this.activeWatcher);\r\n    }\r\n\r\n    saveCurrentChecker(): void {\r\n        this.activeWatcher.attributeCheckers[this.selectedAttribute.name] = this.activeChecker;\r\n        console.log(\"Checker has been saved\", this.activeWatcher);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // load the list of watchers\r\n        this.http.get(REST.SUPERVISORS_CONFIG)\r\n            .map((res: Response) => res.json())\r\n            .subscribe((data) => {\r\n                this.watchers = Factory.watchersArrayFromJSON(data);\r\n            });\r\n\r\n        // find all the components\r\n        this.http.get(REST.GROUPS_WEB_API)\r\n            .map((res: Response) => {\r\n                return <string[]>res.json()\r\n            })\r\n            .subscribe((data) => {\r\n                this.components = data;\r\n            });\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n    }\r\n\r\n    public initTriggerModal(): void {\r\n        // clean the data if the component was already initialized\r\n        if (this.triggerInitialized) {\r\n            // reset wizard\r\n            $(this.getTriggerWizardId()).off(\"showStep\");\r\n            $(this.getTriggerWizardId()).smartWizard(\"reset\");\r\n        }\r\n        this.initTriggerWizard();\r\n        // open the modal\r\n        $(\"#editTriggerModal\").modal(\"show\");\r\n        // and next time user adds the chart - we will reinit all the dialog\r\n        this.triggerInitialized = true;\r\n    }\r\n\r\n    public initCheckersModal(): void {\r\n        // clean the data if the component was already initialized\r\n        if (this.checkersInitialized) {\r\n            // reset wizard\r\n            $(this.getCheckersWizardId()).off(\"showStep\");\r\n            $(this.getCheckersWizardId()).smartWizard(\"reset\");\r\n        }\r\n        this.initCheckersWizard();\r\n        // open the modal\r\n        $(\"#editCheckerModal\").modal(\"show\");\r\n        // and next time user adds the chart - we will reinit all the dialog\r\n        this.checkersInitialized = true;\r\n    }\r\n\r\n    private selectCurrentComponent(component: string): void {\r\n        this.selectedComponent = component;\r\n        this.loadAttributesOnComponentSelected();\r\n        this.activeWatcher.name = component;\r\n        this.activeWatcher.trigger = new ScriptletDataObject();\r\n        this.activeWatcher.attributeCheckers = {};\r\n    }\r\n\r\n    isTriggerAvailable(): boolean {\r\n        return (this.activeWatcher != undefined && this.activeWatcher.trigger != undefined);\r\n    }\r\n\r\n    isCheckersAvailable(): boolean {\r\n        return (this.activeWatcher != undefined\r\n            && this.activeWatcher.attributeCheckers != undefined\r\n            && !$.isEmptyObject(this.activeWatcher.attributeCheckers)\r\n        );\r\n    }\r\n\r\n    public removeCheckerForAttribute(attr: AttributeInformation): void {\r\n        delete this.activeWatcher.attributeCheckers[attr.name];\r\n    }\r\n\r\n    public editCheckerForAttribute(attr: AttributeInformation): void {\r\n        if (!this.activeWatcher.checkerExists(attr.name)) {\r\n            this.activeWatcher.attributeCheckers[attr.name] = new ScriptletDataObject();\r\n        }\r\n        this.activeChecker = this.activeWatcher.attributeCheckers[attr.name];\r\n        this.selectedAttribute = attr;\r\n    }\r\n\r\n    private loadAttributesOnComponentSelected(): void {\r\n        console.log(\"Looking for attributes for group: \", this.selectedComponent);\r\n        this.http.get(REST.CHART_METRICS_BY_COMPONENT(this.selectedComponent))\r\n            .map((res: Response) => {\r\n                let _data: any = res.json();\r\n                let _values: AttributeInformation[] = [];\r\n                for (let i in _data) {\r\n                    _values.push(new AttributeInformation(_data[i]));\r\n                }\r\n                return _values;\r\n            }).catch((res: Response) => Observable.of([])).cache()\r\n            .subscribe((data) => {\r\n                this.attributes = data;\r\n                console.log(\"attributes: \", data);\r\n            });\r\n    }\r\n\r\n    public selectCheckerType(type: string): void {\r\n        if (type == \"ColoredAttributeChecker\") {\r\n            this.activeChecker.object = new ColoredAttributeChecker();\r\n        } else {\r\n            this.activeChecker.object = undefined;\r\n        }\r\n    }\r\n\r\n    public cleanSelection(): void {\r\n        for (let i = 0; i < this.watchers.length; i++) {\r\n            if (this.watchers[i].guid == this.activeWatcher.guid) {\r\n                this.watchers[i] = this.copyWatcher;\r\n            }\r\n        }\r\n        this.activeWatcher = undefined;\r\n        this.isNewEntity = true;\r\n    }\r\n\r\n    public removeWatcher(watcher: Watcher): void {\r\n        this.modal.confirm()\r\n            .className(<VEXBuiltInThemes>'default')\r\n            .message('Watcher is going to be removed. Proceed?')\r\n            .open()\r\n            .then((resultPromise) => {\r\n                return (<Promise<boolean>>resultPromise.result)\r\n                    .then((response) => {\r\n                        this.http.delete(REST.SUPERVISOR_BY_NAME(watcher.name))\r\n                            .map((res: Response) => res.text())\r\n                            .subscribe(data => {\r\n                                console.log(\"watcher has been removed: \", data);\r\n                            });\r\n                        return response;\r\n                    })\r\n                    .catch(() => {\r\n                        console.log(\"user preferred to decline watcher removing\");\r\n                    });\r\n            });\r\n    }\r\n\r\n    public editWatcher(watcher: Watcher): void {\r\n        this.activeWatcher = watcher;\r\n        this.copyWatcher = watcher;\r\n        this.isNewEntity = false;\r\n        this.selectedComponent = watcher.name;\r\n        this.loadAttributesOnComponentSelected();\r\n    }\r\n\r\n    public getPanelHeader(): string {\r\n        return this.isNewEntity ? \"Add new watcher\" : (\"Edit watcher \" + this.activeWatcher.name);\r\n    }\r\n\r\n    private getTriggerWizardId(): string {\r\n        return \"#smartwizardForTrigger\";\r\n    }\r\n\r\n    private getCheckersWizardId(): string {\r\n        return \"#smartwizardForCheckers\";\r\n    }\r\n\r\n    private initTriggerWizard(): void {\r\n        $(this.getTriggerWizardId()).smartWizard({\r\n            theme: 'arrows',\r\n            useURLhash: false,\r\n            showStepURLhash: false,\r\n            transitionEffect: 'fade'\r\n        });\r\n\r\n        $(this.getTriggerWizardId()).on(\"showStep\", function (e, anchorObject, stepNumber, stepDirection) {\r\n            console.log(stepNumber);\r\n        });\r\n    }\r\n\r\n    private initCheckersWizard(): void {\r\n        $(this.getCheckersWizardId()).smartWizard({\r\n            theme: 'arrows',\r\n            useURLhash: false,\r\n            showStepURLhash: false,\r\n            transitionEffect: 'fade'\r\n        });\r\n\r\n        $(this.getCheckersWizardId()).on(\"showStep\", function (e, anchorObject, stepNumber, stepDirection) {\r\n            console.log(stepNumber);\r\n        });\r\n    }\r\n\r\n    public addNewWatcher(): void {\r\n        this.activeWatcher = new Watcher(undefined, {});\r\n        this.selectedComponent = \"\";\r\n    }\r\n\r\n    public onGreenNotify(event: ColoredAttributePredicate): void {\r\n        this.activeChecker.object.green = event;\r\n        console.log(\"Saved green condition: \", event);\r\n    }\r\n\r\n    public onYellowNotify(event: ColoredAttributePredicate): void {\r\n        this.activeChecker.object.yellow = event;\r\n        console.log(\"Saved yellow condition: \", event);\r\n    }\r\n\r\n    public saveActiveWatcher(): void {\r\n        console.log(\"Saving selected watcher: \", this.activeWatcher, \", json is: \", this.activeWatcher.toJSON());\r\n        this.http.put(REST.SUPERVISOR_BY_NAME(this.activeWatcher.name), this.activeWatcher.toJSON())\r\n            .map((res: Response) => res.text())\r\n            .subscribe(data => {\r\n                console.log(\"watcher has been saved: \", data);\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport class EntityWithDescription {\r\n    id: string;\r\n    description: string;\r\n\r\n    constructor(id: string, description: string) {\r\n        this.id = id;\r\n        this.description = description;\r\n    }\r\n\r\n    public static generateCheckersTypes(): EntityWithDescription[] {\r\n        let _value: EntityWithDescription[] = [];\r\n        _value.push(new EntityWithDescription(\"Groovy\", \"Groovy checker\"));\r\n        _value.push(new EntityWithDescription(\"JavaScript\", \"Javascript checker\"));\r\n        _value.push(new EntityWithDescription(\"ColoredAttributeChecker\", \"Green and yellow conditions based checker\"));\r\n        return _value;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/watchers/watchers.view.ts"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACPA;AAWA;AAAA;AACA;AACA;AACA;AAFA;AAAA;;AAAA;AACA;AAAA;;AAAA;AARA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAIA;AAAA;AAHA;;;;;;;;;;ACXA;AACA;AAEA;AACA;AACA;AAOA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AA4CA;AA1CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAlDA;AAAA;;AAAA;AACA;AAAA;;AAAA;AAPA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AAsDA;;AAAA;AArDA;AAuDA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAzCA;;;;;;;;ACnEA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;;ACAA;AACA;AAQA;AAAA;AACA;AACA;AACA;AAFA;AAAA;;AAAA;AACA;AAAA;;AAAA;AARA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAIA;;AAAA;AAHA;;;;;;;;;;ACPA;AAAA;AACA;AACA;AAQA;AANA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;;;;;;ACFA;AAAA;AAOA;AANA;AACA;AACA;AAIA;AAAA;AAPA;;;;;;;;;;ACAA;AAEA;AAAA;AAAA;AAAA;AACA;AAaA;AAVA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAdA;;;;;;;;;;ACFA;AAIA;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AA9DA;AAgEA;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA5BA;AA8BA;AACA;AAAA;AAOA;AANA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAPA;;;;;;;;;;AC/FA;AACA;AAEA;AAAA;AA6BA;AA3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA7BA;;;;;;;;;;;ACHA;AAEA;AAAA;AAAA;AAAA;AACA;AAuCA;AAnCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAxCA;;;;;;;;;;ACFA;AAEA;AAAA;AAAA;AAAA;AACA;AAsBA;AAhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAvBA;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAOA;AAFA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AA1GA;;;;;;;;;;ACRA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAqBA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAvBA;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;;;ACAA;AACA;AAIA;AAEA;AACA;AAMA;AAQA;AAMA;AAAA;AAHA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3CA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AAyCA;;AAAA;AAxCA;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AA6BA;AAAA;AAAA;AA3BA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;ACxDA;AAGA;AAAA;AAQA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;;AAAA;AASA;AAAA;AARA;;;;;;;;;;ACHA;AAMA;AAAA;AAAA;AAJA;AAAA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;ACNA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAOA;AAqBA;AAAA;AAAA;AAnnPA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AAiPA;;AAAA;AAhPA;AAkPA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAhBA;;;;;;","sourceRoot":""}