{"version":3,"file":"3.chunk.js","sources":["webpack:///./src/app/analysis/templates/css/addView.css","webpack:///./src/app/analysis/templates/css/view.css","webpack:///./src/app/analysis/analysis.add.view.ts","webpack:///./src/app/analysis/analysis.modules.ts","webpack:///./src/app/analysis/analysis.template.ts","webpack:///./src/app/analysis/analysis.view.ts","webpack:///./src/app/analysis/components/checkbox.group.component.ts","webpack:///./src/app/analysis/components/templates/checkbox.group.html","webpack:///./src/app/analysis/components/templates/time.intervals.html","webpack:///./src/app/analysis/components/time.interval.component.ts","webpack:///./src/app/analysis/templates/addView.html","webpack:///./src/app/analysis/templates/css/addView.css?2e6b","webpack:///./src/app/analysis/templates/css/view.css?8f24","webpack:///./src/app/analysis/templates/template.view.html","webpack:///./src/app/analysis/templates/view.html"],"sourcesContent":["exports = module.exports = require(\"./../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".form-group {\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n.form {\\r\\n    margin-top: 20px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/analysis/templates/css/addView.css\n// module id = ./node_modules/css-loader/index.js!./src/app/analysis/templates/css/addView.css\n// module chunks = 3","exports = module.exports = require(\"./../../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".cyObject {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    position: absolute;\\r\\n    top: 0px;\\r\\n    left: 0px;\\r\\n}\\r\\n\\r\\n#viewMenu {\\r\\n  background: #fff;\\r\\n  border: 1px solid #E6E9ED;\\r\\n  overflow-y: scroll;\\r\\n  overflow-x: hidden;\\r\\n  height: 500px;\\r\\n  max-height: 700px;\\r\\n  color: rgb(115, 135, 156);\\r\\n  width: 500px;\\r\\n  position: absolute;\\r\\n  right: 7px;\\r\\n  margin-top: -10em !important;\\r\\n  z-index: 3;\\r\\n  padding: 9px;\\r\\n  border-radius: 5px;\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n#viewMenu .row {\\r\\n    margin-left: 10px !important;\\r\\n}\\r\\n\\r\\n#viewMenu ul.bar_tabs {\\r\\n background-color: inherit !important;\\r\\n}\\r\\n\\r\\n#viewMenu .navbar {\\r\\n    min-height: 0 !important;\\r\\n}\\r\\n\\r\\n.tab-pane {\\r\\n    margin-left: 20px !important;\\r\\n}\\r\\n\\r\\n.middleVertical {\\r\\n    margin-top: 7px;\\r\\n}\\r\\n\\r\\n.hided {\\r\\n    display: none;\\r\\n}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/analysis/templates/css/view.css\n// module id = ./node_modules/css-loader/index.js!./src/app/analysis/templates/css/view.css\n// module chunks = 3","import { Component, OnInit } from '@angular/core';\r\nimport { ApiClient, REST } from '../services/app.restClient';\r\nimport { Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Factory } from './model/objectFactory';\r\nimport { E2EView } from './model/abstract.e2e.view';\r\n\r\nimport { ViewService } from '../services/app.viewService';\r\n\r\nimport 'rxjs/add/operator/publishLast';\r\nimport 'rxjs/add/operator/cache';\r\nimport 'rxjs/add/observable/forkJoin';\r\nimport 'rxjs/add/observable/from';\r\nimport 'rxjs/add/observable/of';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  template: require('./templates/addView.html'),\r\n  styles: [ require('./templates/css/addView.css') ]\r\n})\r\nexport class AddView implements OnInit {\r\n\r\n    private http:ApiClient;\r\n    components:Observable<string[]>;\r\n    types:Description[] = Description.createViewTypes();\r\n\r\n    chosenComponent:string = undefined;\r\n    viewType:Description = undefined;\r\n    viewName:string = undefined;\r\n\r\n    shelfLife:number = 1;\r\n    useShelfLife:boolean = false;\r\n\r\n    periods = Description.createPeriodsTypes();\r\n\r\n\r\n    constructor(apiClient: ApiClient, private _viewService:ViewService, private _router: Router) {\r\n        this.http = apiClient;\r\n   }\r\n\r\n   ngOnInit():void {\r\n        this.components = this.http.get(REST.GROUPS_WEB_API)\r\n            .map((res:Response) => { return <string[]>res.json()})\r\n            .publishLast().refCount();\r\n   }\r\n\r\n   saveView():void {\r\n        console.log(\"Trying to append following view: \", this.viewName, this.viewType.id, this.chosenComponent,\r\n            this.useShelfLife ? this.shelfLife * 1000 : undefined);\r\n        let _view:E2EView = Factory.createView(this.viewName, this.viewType.id, this.chosenComponent,\r\n                this.useShelfLife ? this.shelfLife * 1000 : undefined);\r\n        this._viewService.newView(_view);\r\n        this._router.navigateByUrl('/view/' + _view.name);\r\n   }\r\n}\r\n\r\nexport class Description {\r\n    public name:string = \"\";\r\n    public id:string = \"\";\r\n    public description:string = \"\";\r\n    public period:number = 0; //in seconds\r\n\r\n    constructor(name:string, id:string, description:string, period?:number) {\r\n        this.name = name;\r\n        this.id = id;\r\n        this.description = description;\r\n        this.period = period;\r\n    }\r\n\r\n    public static createPeriodsTypes():Description[] {\r\n        let result:Description[] = [];\r\n        result.push(new Description(\"\", \"\", \"1 second\", 1));\r\n        result.push(new Description(\"\", \"\", \"1 minute\", 60));\r\n        result.push(new Description(\"\", \"\", \"5 minutes\", 300));\r\n        result.push(new Description(\"\", \"\", \"15 minutes\", 900));\r\n        result.push(new Description(\"\", \"\", \"1 hour\", 3600));\r\n        result.push(new Description(\"\", \"\", \"12 hours\", 43200));\r\n        result.push(new Description(\"\", \"\", \"24 hours\", 86400));\r\n        return result;\r\n    }\r\n\r\n    public static createViewTypes():Description[] {\r\n        let result:Description[] = [];\r\n        result.push(new Description(\"Landscape view\", E2EView.LANDSCAPE, \"Represents E2E view of all components in IT landscape\"));\r\n        result.push(new Description(\"Child components view\", E2EView.CHILD_COMPONENT, \"Represents E2E view of child components\"));\r\n        result.push(new Description(\"Component modules view\",  E2EView.COMPONENT_MODULES, \"Represents communications scheme between the modules within the component\"));\r\n        return result;\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/analysis/analysis.add.view.ts","import { NgModule }      from '@angular/core';\r\nimport { CommonModule }  from '@angular/common';\r\nimport { ApiClient }     from '../services/app.restClient';\r\nimport { TooltipModule } from 'ng2-tooltip';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { PanelComponent } from '../controls/panel/panel.component';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ModalModule } from 'angular2-modal';\r\nimport {\r\n  VexModalModule,\r\n  providers\r\n} from 'angular2-modal/plugins/vex';\r\nimport { CommonSnampUtilsModule } from '../app.module';\r\n\r\nimport { TemplateView } from './analysis.template';\r\nimport { AddView } from './analysis.add.view';\r\nimport { MainView } from './analysis.view';\r\n\r\nimport { TimeIntervalsView } from './components/time.interval.component';\r\nimport { CheckboxGroupView } from './components/checkbox.group.component';\r\n\r\nconst PROVIDERS:any =  [\r\n  ApiClient,\r\n  providers\r\n];\r\n\r\n@NgModule({\r\n   imports: [\r\n      CommonModule,\r\n      TooltipModule,\r\n      FormsModule,\r\n      ModalModule.forRoot(),\r\n      VexModalModule,\r\n      HttpModule,\r\n      CommonSnampUtilsModule,\r\n      RouterModule.forChild([{\r\n            path: '', component: TemplateView, children: [\r\n                { path: '', component: AddView },\r\n                { path: ':id', component: MainView }\r\n            ]\r\n      }])\r\n    ],\r\n    declarations: [ TemplateView, AddView, MainView, TimeIntervalsView, CheckboxGroupView ],\r\n    providers:    PROVIDERS\r\n})\r\nexport class AnalysisModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/analysis/analysis.modules.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  template: require('./templates/template.view.html'),\r\n})\r\nexport class TemplateView {}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/analysis/analysis.template.ts","import { Component, ViewEncapsulation, ViewContainerRef } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { E2EView } from './model/abstract.e2e.view';\r\nimport { ViewService } from '../services/app.viewService';\r\n\r\nimport 'rxjs/add/operator/publishLast';\r\nimport 'rxjs/add/operator/cache';\r\nimport 'rxjs/add/observable/forkJoin';\r\nimport 'rxjs/add/observable/from';\r\nimport 'rxjs/add/observable/of';\r\n\r\nimport { Overlay } from \"angular2-modal\";\r\nimport { VEXBuiltInThemes, Modal, DialogFormModal } from 'angular2-modal/plugins/vex';\r\nimport {Description} from \"./analysis.add.view\";\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    template: require('./templates/view.html'),\r\n    styles: [require('./templates/css/view.css')],\r\n    encapsulation: ViewEncapsulation.None,\r\n    entryComponents: [\r\n        DialogFormModal\r\n    ]\r\n})\r\nexport class MainView {\r\n\r\n    currentViewObs: Observable<E2EView> = undefined;\r\n    currentView: E2EView = undefined;\r\n    metadata: any = undefined;\r\n    currentNodeId: string = undefined;\r\n    _cyObject: any = undefined;\r\n    nodeSelected: boolean = false;\r\n    selectedLayout: string = \"\";\r\n    textSize: string = \"\";\r\n    textColor: string = \"\";\r\n    backgroundColor: string = \"\";\r\n    textOutlineColor: string = \"\";\r\n    textOutlineWidth: number = 0;\r\n    textWeight: number = 0;\r\n    edgeWidth: number = 0;\r\n    edgeLineColor: string = \"\";\r\n    edgeArrowColor: string = \"\";\r\n    edgeArrowShape: string = \"\";\r\n    showSettings:boolean = false;\r\n\r\n    shelfLife:number = 1;\r\n    useShelfLife:boolean = false;\r\n    oldValueShelfLife:number = 1;\r\n\r\n    shelfLifeChanged:boolean = false;\r\n\r\n    periods = Description.createPeriodsTypes();\r\n\r\n    timerId: any = undefined;\r\n\r\n    constructor(private route: ActivatedRoute, overlay: Overlay, private router: Router,\r\n                private _viewService: ViewService, private modal: Modal, vcRef: ViewContainerRef) {\r\n        overlay.defaultViewContainer = vcRef;\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.currentViewObs = this.route.params\r\n            .map(params => {\r\n                return this._viewService.getViewByName(params['id']);\r\n            });\r\n        this.currentViewObs.publishLast().refCount();\r\n        this.currentViewObs.subscribe((_view: E2EView) => {\r\n            this.currentView = _view;\r\n            this.selectedLayout = _view.getLayout();\r\n            this.textSize = _view.getTextSize();\r\n            this.textColor = _view.getTextColor();\r\n            this.backgroundColor = _view.getBackgroundColor();\r\n            this.textOutlineColor = _view.getTextOutlineColor();\r\n            this.textOutlineWidth = _view.getTextOutlineWidth();\r\n            this.textWeight = _view.getTextWeight();\r\n\r\n            this.edgeWidth = _view.getEdgeWidth();\r\n            this.edgeLineColor = _view.getEdgeLineColor();\r\n            this.edgeArrowColor = _view.getEdgeArrowColor();\r\n            this.edgeArrowShape = _view.getEdgeArrowShape();\r\n\r\n            this.shelfLife = _view.shelfLife;\r\n            this.useShelfLife = _view.isShelfLifeSet;\r\n            this.oldValueShelfLife = _view.shelfLife;\r\n\r\n            console.log(this.selectedLayout, this.textSize, this.textColor, this.backgroundColor, this.textOutlineColor,\r\n                this.textOutlineWidth, this.textWeight, this.edgeWidth, this.edgeLineColor, this.edgeArrowColor, this.edgeArrowShape);\r\n\r\n\r\n            // set checkboxes according to preferences\r\n            let _chbx: string[] = _view.getDisplayedMetadata();\r\n            for (let ij = 0; ij < _chbx.length; ij++) {\r\n                $(\"#myTabContent2 input[type='checkbox'][name='\" + _chbx[ij] + \"']\").prop('checked', true);\r\n            }\r\n\r\n            this._viewService.getDataForView(_view).subscribe((_data: any) => {\r\n                this._cyObject = _view.draw(_data);\r\n                this.handleCy(this._cyObject);\r\n                var _thisReference = this;\r\n                this.timerId = setInterval(function () {\r\n                    if (!document.hidden) {\r\n                        _thisReference._viewService.getDataForView(_view).subscribe(updateData => {\r\n                            _view.updateData(updateData);\r\n                            if (_thisReference.currentNodeId != undefined) {\r\n                                _thisReference.metadata = _thisReference._cyObject.$('#' + _thisReference.currentNodeId).data('arrival');\r\n                            }\r\n                        })\r\n                    }\r\n                }, 3000);\r\n\r\n            });\r\n        });\r\n    }\r\n\r\n    public saveCheckboxStatus(): void {\r\n        let _cb = $(\"#myTabContent2 input[type=checkbox]:checked\");\r\n        let _array: string[] = $.map(_cb, function (element) {\r\n            return $(element).attr(\"name\")\r\n        });\r\n        if (this.currentView != undefined) {\r\n            this.currentView.setDisplayedMetadata(_array);\r\n            this._viewService.saveDashboard();\r\n        }\r\n    }\r\n\r\n    public onChangeLayout(event: any): void {\r\n        this.currentView.changeLayout(event);\r\n        this._viewService.saveDashboard();\r\n    }\r\n\r\n    public onChangeTextSize(event: any): void {\r\n        this.currentView.changeTextSize(event);\r\n        this._viewService.saveDashboard();\r\n    }\r\n\r\n    public onChangeTextColor(event: any): void {\r\n        this.currentView.changeTextColor(event);\r\n        this._viewService.saveDashboard();\r\n    }\r\n\r\n    public onChangeBackgroundColor(event: any): void {\r\n        this.currentView.changeBackgroundColor(event);\r\n        this._viewService.saveDashboard();\r\n    }\r\n\r\n    public onChangeTextOutlineColor(event: any): void {\r\n        this.currentView.changeTextOutlineColor(event);\r\n        this._viewService.saveDashboard();\r\n    }\r\n\r\n    public onChangeTextOutlineWidth(event: any): void {\r\n        this.currentView.changeTextOutlineWidth(event);\r\n        this._viewService.saveDashboard();\r\n    }\r\n\r\n    public onChangeTextWeight(event: any): void {\r\n        this.currentView.changeTextWeight(event);\r\n        this._viewService.saveDashboard();\r\n    }\r\n\r\n    public onChangeEdgeWidth(event: any): void {\r\n        this.currentView.changeEdgeWidth(event);\r\n        this._viewService.saveDashboard();\r\n    }\r\n\r\n    public onChangeEdgeLineColor(event: any): void {\r\n        this.currentView.changeEdgeLineColor(event);\r\n        this._viewService.saveDashboard();\r\n    }\r\n\r\n    public onChangeEdgeArrowColor(event: any): void {\r\n        this.currentView.changeEdgeArrowColor(event);\r\n        this._viewService.saveDashboard();\r\n    }\r\n\r\n    public onChangeEdgeArrowShape(event: any): void {\r\n        this.currentView.changeEdgeArrowShape(event);\r\n        this._viewService.saveDashboard();\r\n    }\r\n\r\n    public onChangeShelfLife(event: any): void {\r\n        this.currentView.shelfLife = event;\r\n        this.shelfLifeChanged = false;\r\n        this._viewService.saveDashboard();\r\n    }\r\n\r\n    public saveShelfLife():void {\r\n        this.onChangeShelfLife(this.shelfLife);\r\n    }\r\n\r\n    public triggerShelfLifeChanged(value:number):void {\r\n        this.shelfLifeChanged = (this.oldValueShelfLife != value);\r\n    }\r\n\r\n    public resetView(): void {\r\n        this.modal.confirm()\r\n            .className(<VEXBuiltInThemes>'default')\r\n            .message('View will be reset to all users. Proceed?')\r\n            .open()\r\n            .then((resultPromise) => {\r\n                return (<Promise<boolean>>resultPromise.result)\r\n                    .then((response) => {\r\n                        this._viewService.resetView(this.currentView).subscribe(data => {\r\n                            console.log(\"view has been reset: \", data);\r\n                        });\r\n                        return response;\r\n                    })\r\n                    .catch(() => {\r\n                        console.log(\"user preferred to decline view reset\");\r\n                    });\r\n            }).catch(() => {});\r\n    }\r\n\r\n    private handleCy(_cy: any): void {\r\n        let _thisReference = this;\r\n        _cy.on('tap', function (event) {\r\n            // cyTarget holds a reference to the originator\r\n            // of the event (core or element)\r\n            let evtTarget = event.cyTarget;\r\n            _thisReference.nodeSelected = (evtTarget != _cy);\r\n            if (evtTarget === _cy) {\r\n                _thisReference.metadata = evtTarget;\r\n                _thisReference.currentNodeId = undefined;\r\n            } else {\r\n                _thisReference.currentNodeId = evtTarget.data('id');\r\n                _thisReference.metadata = _cy.$('#' + evtTarget.data('id')).data('arrival');\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    removeView(): void {\r\n        this.modal.confirm()\r\n            .className(<VEXBuiltInThemes>'default')\r\n            .message('View will be removed. Proceed?')\r\n            .open()\r\n            .then((resultPromise) => {\r\n                return (<Promise<boolean>>resultPromise.result)\r\n                    .then((response) => {\r\n                        this._viewService.removeView(this.currentView.name);\r\n                        let _arr:E2EView[] = this._viewService.getViews();\r\n                        if (_arr.length > 0) {\r\n                            this.router.navigate(['view', _arr[0].name]);\r\n                        } else {\r\n                            this.router.navigate(['view']);\r\n                        }\r\n                        return response;\r\n                    })\r\n                    .catch(() => {\r\n                        console.log(\"user preferred to decline view removing\");\r\n                    });\r\n            }).catch(() => {});\r\n    }\r\n\r\n    toggleShowSettings():void {\r\n        this.showSettings = !this.showSettings;\r\n        let _btn:any = $(\"#btnSettings\");\r\n        let _menuBlock:any = $(\"#viewMenu\");\r\n        _menuBlock.css(\"top\", (_btn.offset().top + _btn.height() + 150) + \"px\");\r\n        _menuBlock.height(($(\"footer\").offset().top - _menuBlock.offset().top - 150) + \"px\");\r\n    }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/analysis/analysis.view.ts","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'checkboxGroup',\r\n  template: require('./templates/checkbox.group.html'),\r\n  styles: ['.flatbar { width: 100% !important; text-align: left !important; margin-left: -15px !important; }']\r\n})\r\nexport class CheckboxGroupView {\r\n    @Input() formName:string= \"\";\r\n    @Input() id:string = \"\";\r\n    @Input() title:string = \"\";\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/analysis/components/checkbox.group.component.ts","module.exports = \"<div>\\r\\n    <nav class=\\\"navbar\\\">\\r\\n        <button class=\\\"navbar-toggler flatbar\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#' + id\\\" [attr.aria-controls]=\\\"id\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n            <span class=\\\"fa fa-chevron-down\\\"></span> {{title}}\\r\\n        </button>\\r\\n    </nav>\\r\\n    <div class=\\\"collapse\\\" [attr.id]=\\\"id\\\">\\r\\n        <div class=\\\"p-4\\\">\\r\\n            <div class=\\\"row\\\" style=\\\"margin-left: 10px;\\\">\\r\\n\\r\\n                <div class=\\\"form-check\\\">\\r\\n                    <label class=\\\"form-check-label\\\">\\r\\n                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.name]=\\\"formName + '/' + 'Second'\\\">\\r\\n                        1 second\\r\\n                    </label>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-check\\\">\\r\\n                    <label class=\\\"form-check-label\\\">\\r\\n                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.name]=\\\"formName + '/' + 'Minute'\\\">\\r\\n                        1 minute\\r\\n                    </label>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-check\\\">\\r\\n                    <label class=\\\"form-check-label\\\">\\r\\n                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.name]=\\\"formName + '/' + '5Minutes'\\\">\\r\\n                        5 minutes\\r\\n                    </label>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-check\\\">\\r\\n                    <label class=\\\"form-check-label\\\">\\r\\n                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.name]=\\\"formName + '/' + '15Minutes'\\\">\\r\\n                        15 minutes\\r\\n                    </label>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-check\\\">\\r\\n                    <label class=\\\"form-check-label\\\">\\r\\n                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.name]=\\\"formName + '/' + 'Hour'\\\">\\r\\n                        1 hour\\r\\n                    </label>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-check\\\">\\r\\n                    <label class=\\\"form-check-label\\\">\\r\\n                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.name]=\\\"formName + '/' + '12Hours'\\\">\\r\\n                        12 hours\\r\\n                    </label>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-check\\\">\\r\\n                    <label class=\\\"form-check-label\\\">\\r\\n                        <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.name]=\\\"formName + '/' + 'Day'\\\">\\r\\n                        1 day\\r\\n                    </label>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/analysis/components/templates/checkbox.group.html\n// module id = ./src/app/analysis/components/templates/checkbox.group.html\n// module chunks = 3","module.exports = \"<div>\\r\\n    <nav class=\\\"navbar\\\">\\r\\n        <button class=\\\"navbar-toggler flatbar\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" [attr.data-target]=\\\"'#' + id\\\" [attr.aria-controls]=\\\"id\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n            <span class=\\\"fa fa-chevron-down\\\"></span> {{title}}\\r\\n        </button>\\r\\n    </nav>\\r\\n    <div class=\\\"collapse\\\" [attr.id]=\\\"id\\\">\\r\\n        <div class=\\\"p-4\\\">\\r\\n            <dl class=\\\"row\\\" style=\\\"margin-left: 10px;\\\">\\r\\n                <dt class=\\\"col-sm-4\\\">1 second: </dt>\\r\\n                <dd class=\\\"col-sm-8\\\">{{jsonObject['Second']}}</dd>\\r\\n\\r\\n                <dt class=\\\"col-sm-4\\\">1 minute: </dt>\\r\\n                <dd class=\\\"col-sm-8\\\">{{jsonObject['Minute']}}</dd>\\r\\n\\r\\n                <dt class=\\\"col-sm-4\\\">5 minutes: </dt>\\r\\n                <dd class=\\\"col-sm-8\\\">{{jsonObject['5Minutes']}}</dd>\\r\\n\\r\\n                <dt class=\\\"col-sm-4\\\">15 minutes: </dt>\\r\\n                <dd class=\\\"col-sm-8\\\">{{jsonObject['15Minutes']}}</dd>\\r\\n\\r\\n                <dt class=\\\"col-sm-4\\\">1 hour: </dt>\\r\\n                <dd class=\\\"col-sm-8\\\">{{jsonObject['Hour']}}</dd>\\r\\n\\r\\n                <dt class=\\\"col-sm-4\\\">12 hours: </dt>\\r\\n                <dd class=\\\"col-sm-8\\\">{{jsonObject['12Hours']}}</dd>\\r\\n\\r\\n                <dt class=\\\"col-sm-4\\\">1 day: </dt>\\r\\n                <dd class=\\\"col-sm-8\\\">{{jsonObject['Day']}}</dd>\\r\\n            </dl>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/analysis/components/templates/time.intervals.html\n// module id = ./src/app/analysis/components/templates/time.intervals.html\n// module chunks = 3","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'timeInterval',\r\n  template: require('./templates/time.intervals.html'),\r\n  styles: ['.flatbar { width: 100% !important; text-align: left !important; margin-left: -15px !important; }']\r\n})\r\nexport class TimeIntervalsView {\r\n    @Input() jsonObject: any = {};\r\n    @Input() id:string = \"\";\r\n    @Input() title:string = \"\";\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[/n/r]/s*/.|/.)import/((.+)/)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/analysis/components/time.interval.component.ts","module.exports = \"<div class=\\\"right_col\\\" role=\\\"main\\\" style=\\\"min-height: 949px;\\\">\\r\\n  <div class=\\\"\\\">\\r\\n    <div class=\\\"page-title\\\">\\r\\n      <div class=\\\"title_left\\\">\\r\\n        <h3>Add E2E view</h3>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n    <div class=\\\"row\\\" style=\\\"margin-top: 30px\\\">\\r\\n\\r\\n      <panel [header]=\\\"'Gateway type'\\\" [column]=\\\"'8'\\\">\\r\\n        <div class=\\\"form leftAlign\\\">\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"viewName\\\">\\r\\n              View name <span class=\\\"required\\\">*</span>\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <input type=\\\"text\\\" id=\\\"viewName\\\" [(ngModel)]=\\\"viewName\\\" required=\\\"required\\\" class=\\\"form-control\\\" placeholder=\\\"Input view name\\\"/>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"viewType\\\">\\r\\n              Type of view <span class=\\\"required\\\">*</span>\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"viewType\\\" id=\\\"viewType\\\">\\r\\n                <option *ngFor=\\\"let type of types\\\" [ngValue]=\\\"type\\\">{{type.name}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\" *ngIf=\\\"viewType && viewType.id != 'landscape'\\\">\\r\\n            <label class=\\\"col-sm-2 col-form-label\\\" for=\\\"viewType\\\">\\r\\n              Component to analysis <span class=\\\"required\\\">*</span>\\r\\n            </label>\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"chosenComponent\\\" id=\\\"component\\\">\\r\\n                <option *ngFor=\\\"let component of components | async\\\" [ngValue]=\\\"component\\\">{{component}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"item form-group\\\">\\r\\n              <label\\r\\n                      class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n                      style=\\\"margin-top: 7px;\\\">\\r\\n                Use shelf life period\\r\\n              </label>\\r\\n\\r\\n              <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\" >\\r\\n                <ui-switch\\r\\n                        [(ngModel)]=\\\"useShelfLife\\\"\\r\\n                        [size]=\\\"'small'\\\">\\r\\n                </ui-switch>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"item form-group\\\" *ngIf=\\\"useShelfLife\\\">\\r\\n              <label\\r\\n                      class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n                      for=\\\"shelfLifeInputSelect\\\"\\r\\n                      style=\\\"margin-top: 7px;\\\">\\r\\n                Set shelf life duration (pick from list)\\r\\n              </label>\\r\\n\\r\\n              <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\" >\\r\\n                <select class=\\\"form-control\\\" [(ngModel)]=\\\"shelfLife\\\" id=\\\"shelfLifeInputSelect\\\">\\r\\n                  <option *ngFor=\\\"let period of periods\\\" [ngValue]=\\\"period.period\\\">{{period.description}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <div class=\\\"item form-group\\\" *ngIf=\\\"useShelfLife\\\">\\r\\n              <label\\r\\n                      class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n                      for=\\\"shelfLifeInputText\\\"\\r\\n                      style=\\\"margin-top: 7px;\\\">\\r\\n                Set shelf life duration (set manually in seconds)\\r\\n              </label>\\r\\n\\r\\n              <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\" >\\r\\n                <input type=\\\"number\\\" id=\\\"shelfLifeInputText\\\" [(ngModel)]=\\\"shelfLife\\\" class=\\\"form-control\\\" placeholder=\\\"Input shelf life in seconds\\\"/>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"ln_solid\\\"></div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-1 col-sm-offset-11\\\">\\r\\n              <div class=\\\"btn btn-primary\\\" (click)=\\\"saveView()\\\">Save</div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </panel>\\r\\n\\r\\n      <panel [header]=\\\"'Description'\\\" [column]=\\\"'4'\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-12 pagination-centered\\\" *ngIf=\\\"!viewType\\\">\\r\\n              Please select a type to get a description\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-12\\\" *ngIf=\\\"viewType\\\">\\r\\n            {{viewType.description}}\\r\\n          </div>\\r\\n        </div>\\r\\n      </panel>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/analysis/templates/addView.html\n// module id = ./src/app/analysis/templates/addView.html\n// module chunks = 3","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!./addView.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/analysis/templates/css/addView.css\n// module id = ./src/app/analysis/templates/css/addView.css\n// module chunks = 3","\n        var result = require(\"!!../../../../../node_modules/css-loader/index.js!./view.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/analysis/templates/css/view.css\n// module id = ./src/app/analysis/templates/css/view.css\n// module chunks = 3","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/analysis/templates/template.view.html\n// module id = ./src/app/analysis/templates/template.view.html\n// module chunks = 3","module.exports = \"<div id=\\\"viewMenu\\\" [class.hided]=\\\"!showSettings\\\">\\r\\n    <div role=\\\"tabpanel\\\" data-example-id=\\\"togglable-tabs\\\">\\r\\n        <ul id=\\\"myTab1\\\" class=\\\"nav nav-tabs bar_tabs\\\" role=\\\"tablist\\\">\\r\\n            <li role=\\\"presentation\\\" class=\\\"\\\"><a href=\\\"#tab_info\\\" id=\\\"home-tabb\\\" role=\\\"tab\\\" data-toggle=\\\"tab\\\"\\r\\n                                                aria-controls=\\\"info\\\" aria-expanded=\\\"false\\\"\\r\\n                                                *ngIf=\\\"metadata && nodeSelected\\\">Information</a></li>\\r\\n            <li role=\\\"presentation\\\" class=\\\"active\\\"><a href=\\\"#tab_settings\\\" role=\\\"tab\\\" id=\\\"profile-tabb\\\"\\r\\n                                                      data-toggle=\\\"tab\\\" aria-controls=\\\"settings\\\" aria-expanded=\\\"true\\\">Nodes\\r\\n                settings</a></li>\\r\\n            <li role=\\\"presentation\\\" class=\\\"\\\"><a href=\\\"#tab_cy\\\" role=\\\"tab\\\" id=\\\"cy-tabb\\\" data-toggle=\\\"tab\\\"\\r\\n                                                aria-controls=\\\"cy\\\" aria-expanded=\\\"false\\\">Graph settings</a></li>\\r\\n        </ul>\\r\\n        <div id=\\\"myTabContent2\\\" class=\\\"tab-content\\\">\\r\\n            <div role=\\\"tabpanel\\\" class=\\\"tab-pane fade \\\" id=\\\"tab_info\\\" aria-labelledby=\\\"info-tab\\\"\\r\\n                 *ngIf=\\\"metadata && nodeSelected\\\">\\r\\n                <div>\\r\\n                    <timeInterval [id]=\\\"'availabilityToggle'\\\" [jsonObject]=\\\"metadata.availability\\\"\\r\\n                                  [title]=\\\"'Availability'\\\"></timeInterval>\\r\\n                    <timeInterval [id]=\\\"'maxRatePerSecondToggle'\\\" [jsonObject]=\\\"metadata.maxRatePerSecond\\\"\\r\\n                                  [title]=\\\"'Max rate per second'\\\"></timeInterval>\\r\\n                    <timeInterval [id]=\\\"'maxResponseTimeToggle'\\\" [jsonObject]=\\\"metadata.maxResponseTime\\\"\\r\\n                                  [title]=\\\"'Max response time'\\\"></timeInterval>\\r\\n                    <timeInterval [id]=\\\"'meanRateToggle'\\\" [jsonObject]=\\\"metadata.meanRate\\\"\\r\\n                                  [title]=\\\"'Mean rate'\\\"></timeInterval>\\r\\n                    <timeInterval [id]=\\\"'meanResponseTimeToggle'\\\" [jsonObject]=\\\"metadata.meanResponseTime\\\"\\r\\n                                  [title]=\\\"'Mean response time'\\\"></timeInterval>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <dt class=\\\"col-sm-4\\\">Channels:</dt>\\r\\n                        <dd class=\\\"col-sm-8\\\">{{metadata.channels}}</dd>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <dt class=\\\"col-sm-4\\\">Efficiency:</dt>\\r\\n                        <dd class=\\\"col-sm-8\\\">{{metadata.efficiency}}</dd>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <dt class=\\\"col-sm-4\\\">Scalability:</dt>\\r\\n                        <dd class=\\\"col-sm-8\\\">{{metadata.scalability}}</dd>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <dt class=\\\"col-sm-4\\\">Response time (90):</dt>\\r\\n                        <dd class=\\\"col-sm-8\\\">{{metadata.responseTime90}}</dd>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <dt class=\\\"col-sm-4\\\">Response time (95):</dt>\\r\\n                        <dd class=\\\"col-sm-8\\\">{{metadata.responseTime95}}</dd>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <dt class=\\\"col-sm-4\\\">Response time (98):</dt>\\r\\n                        <dd class=\\\"col-sm-8\\\">{{metadata.responseTime98}}</dd>\\r\\n                    </div>\\r\\n\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <dt class=\\\"col-sm-4\\\">Response time standard deviation:</dt>\\r\\n                        <dd class=\\\"col-sm-8\\\">{{metadata.responseTimeStdDev}}</dd>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"metadata && !nodeSelected\\\">{{metadata}}</div>\\r\\n                <div *ngIf=\\\"!metadata\\\">No data is available</div>\\r\\n            </div>\\r\\n            <div role=\\\"tabpanel\\\" class=\\\"tab-pane fade active in\\\" id=\\\"tab_settings\\\" aria-labelledby=\\\"settings-tab\\\">\\r\\n                <p>Select needful information to display on graph: </p>\\r\\n                <checkboxGroup [id]=\\\"'availabilityCheckboxToggle'\\\" [title]=\\\"'Availability'\\\"\\r\\n                               [formName]=\\\"'availability'\\\"></checkboxGroup>\\r\\n                <checkboxGroup [id]=\\\"'maxRatePerSecondCheckboxToggle'\\\" [title]=\\\"'Max rate per second'\\\"\\r\\n                               [formName]=\\\"'maxRatePerSecond'\\\"></checkboxGroup>\\r\\n                <checkboxGroup [id]=\\\"'maxResponseTimeCheckboxToggle'\\\" [title]=\\\"'Max response time'\\\"\\r\\n                               [formName]=\\\"'maxResponseTime'\\\"></checkboxGroup>\\r\\n                <checkboxGroup [id]=\\\"'meanRateCheckboxToggle'\\\" [title]=\\\"'Mean rate'\\\"\\r\\n                               [formName]=\\\"'meanRate'\\\"></checkboxGroup>\\r\\n                <checkboxGroup [id]=\\\"'meanResponseTimeCheckboxToggle'\\\" [title]=\\\"'Mean response time'\\\"\\r\\n                               [formName]=\\\"'meanResponseTime'\\\"></checkboxGroup>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-check\\\">\\r\\n                        <label class=\\\"form-check-label\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.name]=\\\"'channels'\\\">\\r\\n                            Channels\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-check\\\">\\r\\n                        <label class=\\\"form-check-label\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.name]=\\\"'efficiency'\\\">\\r\\n                            Efficiency\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-check\\\">\\r\\n                        <label class=\\\"form-check-label\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.name]=\\\"'scalability'\\\">\\r\\n                            Scalability\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-check\\\">\\r\\n                        <label class=\\\"form-check-label\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.name]=\\\"'responseTime90'\\\">\\r\\n                            Response time (90)\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-check\\\">\\r\\n                        <label class=\\\"form-check-label\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.name]=\\\"'responseTime95'\\\">\\r\\n                            Response time (95)\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-check\\\">\\r\\n                        <label class=\\\"form-check-label\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.name]=\\\"'responseTime98'\\\">\\r\\n                            Response time (98)\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"form-check\\\">\\r\\n                        <label class=\\\"form-check-label\\\">\\r\\n                            <input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" [attr.name]=\\\"'responseTimeStdDev'\\\">\\r\\n                            Response time standard deviation\\r\\n                        </label>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"saveCheckboxStatus()\\\">Apply</button>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n            <div role=\\\"tabpanel\\\" class=\\\"tab-pane fade\\\" id=\\\"tab_cy\\\" aria-labelledby=\\\"cy-tab\\\">\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"control-label col-md-3 col-sm-3 col-xs-12 middleVertical\\\"\\r\\n                           for=\\\"layout-select\\\">Layout</label>\\r\\n                    <div class=\\\"col-md-9 col-sm-9 col-xs-12\\\">\\r\\n                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedLayout\\\"\\r\\n                                (ngModelChange)=\\\"onChangeLayout($event)\\\" id=\\\"layout-select\\\">\\r\\n                            <option value=\\\"random\\\">Random</option>\\r\\n                            <option value=\\\"grid\\\">Grid</option>\\r\\n                            <option value=\\\"circle\\\">Circle</option>\\r\\n                            <option value=\\\"concentric\\\">Concentric</option>\\r\\n                            <option value=\\\"breadthfirst\\\">Breadthfirst</option>\\r\\n                            <option value=\\\"cose\\\">Cose</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label for=\\\"text-size-input\\\" class=\\\"col-md-3 col-sm-3 col-xs-12\\\">Text size (px)</label>\\r\\n                    <div class=\\\"col-md-9 col-sm-9 col-xs-12\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"textSize\\\" id=\\\"text-size-input\\\"\\r\\n                               placeholder=\\\"Input text size\\\" (ngModelChange)=\\\"onChangeTextSize($event)\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label for=\\\"text-size-input\\\" class=\\\"col-md-3 col-sm-3 col-xs-12\\\">Text color</label>\\r\\n                    <div class=\\\"col-md-9 col-sm-9 col-xs-12\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"color\\\" [(ngModel)]=\\\"textColor\\\" id=\\\"text-color-input\\\"\\r\\n                               placeholder=\\\"Input text color\\\" (ngModelChange)=\\\"onChangeTextColor($event)\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label for=\\\"text-size-input\\\" class=\\\"col-md-3 col-sm-3 col-xs-12\\\">Background color</label>\\r\\n                    <div class=\\\"col-md-9 col-sm-9 col-xs-12\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"color\\\" [(ngModel)]=\\\"backgroundColor\\\"\\r\\n                               id=\\\"background-color-input\\\" placeholder=\\\"Input background color\\\"\\r\\n                               (ngModelChange)=\\\"onChangeBackgroundColor($event)\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label for=\\\"text-size-input\\\" class=\\\"col-md-3 col-sm-3 col-xs-12\\\">Text outline color</label>\\r\\n                    <div class=\\\"col-md-9 col-sm-9 col-xs-12\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"color\\\" [(ngModel)]=\\\"textOutlineColor\\\"\\r\\n                               id=\\\"text-outline-color-input\\\" placeholder=\\\"Input text outline color\\\"\\r\\n                               (ngModelChange)=\\\"onChangeTextOutlineColor($event)\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label for=\\\"text-size-input\\\" class=\\\"col-md-3 col-sm-3 col-xs-12\\\">Text outline width</label>\\r\\n                    <div class=\\\"col-md-9 col-sm-9 col-xs-12\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"textOutlineWidth\\\"\\r\\n                               id=\\\"text-outline-width-input\\\" placeholder=\\\"Input text outline width\\\"\\r\\n                               (ngModelChange)=\\\"onChangeTextOutlineWidth($event)\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label for=\\\"text-size-input\\\" class=\\\"col-md-3 col-sm-3 col-xs-12\\\">Text weight</label>\\r\\n                    <div class=\\\"col-md-9 col-sm-9 col-xs-12\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"textWeight\\\" id=\\\"text-weight-input\\\"\\r\\n                               placeholder=\\\"Input text weight\\\" (ngModelChange)=\\\"onChangeTextWeight($event)\\\" step=\\\"100\\\"\\r\\n                               min=\\\"100\\\" max=\\\"900\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <h5>Edge settings</h5>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label for=\\\"text-size-input\\\" class=\\\"col-md-3 col-sm-3 col-xs-12\\\">Edge line width</label>\\r\\n                    <div class=\\\"col-md-9 col-sm-9 col-xs-12\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"edgeWidth\\\" id=\\\"edge-width-input\\\"\\r\\n                               placeholder=\\\"Input edge line width\\\" (ngModelChange)=\\\"onChangeEdgeWidth($event)\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label for=\\\"text-size-input\\\" class=\\\"col-md-3 col-sm-3 col-xs-12\\\">Edge line color</label>\\r\\n                    <div class=\\\"col-md-9 col-sm-9 col-xs-12\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"color\\\" [(ngModel)]=\\\"edgeLineColor\\\" id=\\\"edge-line-color-input\\\"\\r\\n                               placeholder=\\\"Input edge line color\\\" (ngModelChange)=\\\"onChangeEdgeLineColor($event)\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label for=\\\"text-size-input\\\" class=\\\"col-md-3 col-sm-3 col-xs-12\\\">Edge arrow color</label>\\r\\n                    <div class=\\\"col-md-9 col-sm-9 col-xs-12\\\">\\r\\n                        <input class=\\\"form-control\\\" type=\\\"color\\\" [(ngModel)]=\\\"edgeArrowColor\\\"\\r\\n                               id=\\\"edge-arrow-color-input\\\" placeholder=\\\"Input edge arrow color\\\"\\r\\n                               (ngModelChange)=\\\"onChangeEdgeArrowColor($event)\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <label class=\\\"control-label col-md-3 col-sm-3 col-xs-12 middleVertical\\\" for=\\\"edge-shape-select\\\">Edge\\r\\n                        arrow shape</label>\\r\\n                    <div class=\\\"col-md-9 col-sm-9 col-xs-12\\\">\\r\\n                        <select class=\\\"form-control\\\" [(ngModel)]=\\\"edgeArrowShape\\\"\\r\\n                                (ngModelChange)=\\\"onChangeEdgeArrowShape($event)\\\" id=\\\"edge-shape-select\\\">\\r\\n                            <option value=\\\"tee\\\">Tee</option>\\r\\n                            <option value=\\\"triangle\\\">Triangle</option>\\r\\n                            <option value=\\\"triangle-tee\\\">Triangle tee</option>\\r\\n                            <option value=\\\"triangle-backcurve\\\">Triangle backcurve</option>\\r\\n                            <option value=\\\"square\\\">Square</option>\\r\\n                            <option value=\\\"circle\\\">Circle</option>\\r\\n                            <option value=\\\"diamond\\\">Diamond</option>\\r\\n                            <option value=\\\"none\\\">None</option>\\r\\n                        </select>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"item form-group\\\">\\r\\n                        <label\\r\\n                                class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n                                style=\\\"margin-top: 7px;\\\">\\r\\n                            Use shelf life period\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\" >\\r\\n                            <ui-switch\\r\\n                                    [(ngModel)]=\\\"useShelfLife\\\"\\r\\n                                    [size]=\\\"'small'\\\">\\r\\n                            </ui-switch>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"item form-group\\\" *ngIf=\\\"useShelfLife\\\">\\r\\n                        <label\\r\\n                                class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n                                for=\\\"shelfLifeInputSelect\\\"\\r\\n                                style=\\\"margin-top: 7px;\\\">\\r\\n                            Set shelf life duration (pick from list)\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"col-md-6 col-sm-6 col-xs-12\\\" >\\r\\n                            <select class=\\\"form-control\\\" [(ngModel)]=\\\"shelfLife\\\" id=\\\"shelfLifeInputSelect\\\" (ngModelChange)=\\\"onChangeShelfLife($event)\\\">\\r\\n                                <option *ngFor=\\\"let period of periods\\\" [ngValue]=\\\"period.period\\\">{{period.description}}</option>\\r\\n                            </select>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"item form-group\\\" *ngIf=\\\"useShelfLife\\\">\\r\\n                        <label\\r\\n                                class=\\\"control-label col-md-3 col-sm-3 col-xs-12\\\"\\r\\n                                for=\\\"shelfLifeInputText\\\"\\r\\n                                style=\\\"margin-top: 7px;\\\">\\r\\n                            Set shelf life duration (set manually in seconds)\\r\\n                        </label>\\r\\n\\r\\n                        <div class=\\\"col-md-9 col-sm-9 col-xs-12\\\" >\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <input class=\\\"form-control\\\"\\r\\n                                       type=\\\"number\\\"\\r\\n                                       id=\\\"shelfLifeInputText\\\"\\r\\n                                       [(ngModel)]=\\\"shelfLife\\\"\\r\\n                                       (ngModelChange)=\\\"triggerShelfLifeChanged($event)\\\"\\r\\n                                       class=\\\"form-control\\\"\\r\\n                                       placeholder=\\\"Input shelf life in seconds\\\">\\r\\n                              <span class=\\\"input-group-btn\\\">\\r\\n                                 <button class=\\\"btn btn-secondary\\\"\\r\\n                                         [class.btn-primary]=\\\"shelfLifeChanged\\\"\\r\\n                                         type=\\\"button\\\"\\r\\n                                         (click)=\\\"saveShelfLife()\\\"\\r\\n                                         [disabled]=\\\"!shelfLifeChanged\\\">Save\\r\\n                                 </button>\\r\\n                              </span>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"resetView()\\\">Reset view</button>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"right_col\\\" role=\\\"main\\\" style=\\\"min-height: 949px;\\\">\\r\\n\\r\\n    <div class=\\\"row\\\" style=\\\"padding-right: 10px;\\\">\\r\\n        <div class=\\\"col-md-4\\\" style=\\\"padding-top: 20px;\\\">\\r\\n            <h3>End-to-End {{(currentViewObs | async)?.name}} {{'(' + ((currentViewObs | async)?.type) + ')'}}</h3>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-6\\\"></div>\\r\\n\\r\\n        <div class=\\\"col-md-2\\\" style=\\\"padding-top: 20px;\\\">\\r\\n\\r\\n            <div class=\\\"row\\\" style=\\\"float: right\\\">\\r\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\"removeView()\\\"><i class=\\\"fa fa-trash\\\"></i></button>\\r\\n                <button class=\\\"btn btn-primary\\\" id=\\\"btnSettings\\\" (click)=\\\"toggleShowSettings()\\\"><i class=\\\"fa\\\" [class.fa-angle-up]=\\\"showSettings\\\" [class.fa-angle-down]=\\\"!showSettings\\\"></i> Settings</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <hr/>\\r\\n\\r\\n    <div class=\\\"clearfix\\\"></div>\\r\\n\\r\\n    <div class=\\\"row container\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n            <div [attr.id]=\\\"(currentViewObs | async)?.id\\\" class=\\\"cyObject\\\" style=\\\"min-height: 900px;\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/analysis/templates/view.html\n// module id = ./src/app/analysis/templates/view.html\n// module chunks = 3"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACPA;AACA;AAGA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAOA;AAgBA;AAAA;AAAA;AAZA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAtCA;AAAA;AACA;AACA;AACA;AACA;;AAAA;AAmCA;;AAAA;AAlCA;AAoCA;AAMA;AALA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAhCA;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAqBA;AAAA;AAAA;AAnBA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;AC9CA;AAMA;AAAA;AAAA;AAJA;AAAA;AACA;AACA;AACA;;AAAA;AACA;AAAA;AAAA;;;;;;;;;;ACNA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAWA;AA+BA;AAAA;AAAA;AACA;AAAA;AA9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAIA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAxPA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAiPA;;AAAA;AAhPA;;;;;;;;;;;AC1BA;AAQA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAKA;AAAA;AAJA;;;;;;;;ACRA;;;;;;;ACAA;;;;;;;;;ACAA;AAQA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAAA;;AAAA;AACA;AAAA;;AAAA;AACA;AAAA;;AAAA;AATA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAKA;AAAA;AAJA;;;;;;;;ACRA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;;;;;;;ACAA;;;;","sourceRoot":""}